{
  "version": 3,
  "sources": ["../../svelte/src/runtime/internal/utils.js", "../../svelte/src/runtime/internal/environment.js", "../../svelte/src/runtime/internal/loop.js", "../../svelte/src/runtime/internal/globals.js", "../../svelte/src/runtime/internal/ResizeObserverSingleton.js", "../../svelte/src/runtime/internal/dom.js", "../../svelte/src/runtime/internal/style_manager.js", "../../svelte/src/runtime/internal/animations.js", "../../svelte/src/runtime/internal/lifecycle.js", "../../svelte/src/runtime/internal/scheduler.js", "../../svelte/src/runtime/internal/transitions.js", "../../svelte/src/runtime/internal/await_block.js", "../../svelte/src/runtime/internal/each.js", "../../svelte/src/runtime/internal/spread.js", "../../svelte/src/shared/boolean_attributes.js", "../../svelte/src/shared/utils/names.js", "../../svelte/src/runtime/internal/ssr.js", "../../svelte/src/runtime/internal/Component.js", "../../svelte/src/runtime/internal/dev.js"],
  "sourcesContent": ["/** @returns {void} */\r\nexport function noop() {}\r\n\r\nexport const identity = (x) => x;\r\n\r\n/**\r\n * @template T\r\n * @template S\r\n * @param {T} tar\r\n * @param {S} src\r\n * @returns {T & S}\r\n */\r\nexport function assign(tar, src) {\r\n\t// @ts-ignore\r\n\tfor (const k in src) tar[k] = src[k];\r\n\treturn /** @type {T & S} */ (tar);\r\n}\r\n\r\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\r\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\r\n/**\r\n * @param {any} value\r\n * @returns {value is PromiseLike<any>}\r\n */\r\nexport function is_promise(value) {\r\n\treturn (\r\n\t\t!!value &&\r\n\t\t(typeof value === 'object' || typeof value === 'function') &&\r\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\r\n\t);\r\n}\r\n\r\n/** @returns {void} */\r\nexport function add_location(element, file, line, column, char) {\r\n\telement.__svelte_meta = {\r\n\t\tloc: { file, line, column, char }\r\n\t};\r\n}\r\n\r\nexport function run(fn) {\r\n\treturn fn();\r\n}\r\n\r\nexport function blank_object() {\r\n\treturn Object.create(null);\r\n}\r\n\r\n/**\r\n * @param {Function[]} fns\r\n * @returns {void}\r\n */\r\nexport function run_all(fns) {\r\n\tfns.forEach(run);\r\n}\r\n\r\n/**\r\n * @param {any} thing\r\n * @returns {thing is Function}\r\n */\r\nexport function is_function(thing) {\r\n\treturn typeof thing === 'function';\r\n}\r\n\r\n/** @returns {boolean} */\r\nexport function safe_not_equal(a, b) {\r\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\r\n}\r\n\r\nlet src_url_equal_anchor;\r\n\r\n/**\r\n * @param {string} element_src\r\n * @param {string} url\r\n * @returns {boolean}\r\n */\r\nexport function src_url_equal(element_src, url) {\r\n\tif (element_src === url) return true;\r\n\tif (!src_url_equal_anchor) {\r\n\t\tsrc_url_equal_anchor = document.createElement('a');\r\n\t}\r\n\t// This is actually faster than doing URL(..).href\r\n\tsrc_url_equal_anchor.href = url;\r\n\treturn element_src === src_url_equal_anchor.href;\r\n}\r\n\r\n/** @param {string} srcset */\r\nfunction split_srcset(srcset) {\r\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\r\n}\r\n\r\n/**\r\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\r\n * @param {string | undefined | null} srcset\r\n * @returns {boolean}\r\n */\r\nexport function srcset_url_equal(element_srcset, srcset) {\r\n\tconst element_urls = split_srcset(element_srcset.srcset);\r\n\tconst urls = split_srcset(srcset || '');\r\n\r\n\treturn (\r\n\t\turls.length === element_urls.length &&\r\n\t\turls.every(\r\n\t\t\t([url, width], i) =>\r\n\t\t\t\twidth === element_urls[i][1] &&\r\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\r\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\r\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\r\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\r\n\t\t\t\t// contain relative or absolute URLs.\r\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\r\n\t\t)\r\n\t);\r\n}\r\n\r\n/** @returns {boolean} */\r\nexport function not_equal(a, b) {\r\n\treturn a != a ? b == b : a !== b;\r\n}\r\n\r\n/** @returns {boolean} */\r\nexport function is_empty(obj) {\r\n\treturn Object.keys(obj).length === 0;\r\n}\r\n\r\n/** @returns {void} */\r\nexport function validate_store(store, name) {\r\n\tif (store != null && typeof store.subscribe !== 'function') {\r\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\r\n\t}\r\n}\r\n\r\nexport function subscribe(store, ...callbacks) {\r\n\tif (store == null) {\r\n\t\tfor (const callback of callbacks) {\r\n\t\t\tcallback(undefined);\r\n\t\t}\r\n\t\treturn noop;\r\n\t}\r\n\tconst unsub = store.subscribe(...callbacks);\r\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\r\n}\r\n\r\n/**\r\n * Get the current value from a store by subscribing and immediately unsubscribing.\r\n *\r\n * https://svelte.dev/docs/svelte-store#get\r\n * @template T\r\n * @param {import('../store/public.js').Readable<T>} store\r\n * @returns {T}\r\n */\r\nexport function get_store_value(store) {\r\n\tlet value;\r\n\tsubscribe(store, (_) => (value = _))();\r\n\treturn value;\r\n}\r\n\r\n/** @returns {void} */\r\nexport function component_subscribe(component, store, callback) {\r\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\r\n}\r\n\r\nexport function create_slot(definition, ctx, $$scope, fn) {\r\n\tif (definition) {\r\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\r\n\t\treturn definition[0](slot_ctx);\r\n\t}\r\n}\r\n\r\nfunction get_slot_context(definition, ctx, $$scope, fn) {\r\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\r\n}\r\n\r\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\r\n\tif (definition[2] && fn) {\r\n\t\tconst lets = definition[2](fn(dirty));\r\n\t\tif ($$scope.dirty === undefined) {\r\n\t\t\treturn lets;\r\n\t\t}\r\n\t\tif (typeof lets === 'object') {\r\n\t\t\tconst merged = [];\r\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\r\n\t\t\tfor (let i = 0; i < len; i += 1) {\r\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\r\n\t\t\t}\r\n\t\t\treturn merged;\r\n\t\t}\r\n\t\treturn $$scope.dirty | lets;\r\n\t}\r\n\treturn $$scope.dirty;\r\n}\r\n\r\n/** @returns {void} */\r\nexport function update_slot_base(\r\n\tslot,\r\n\tslot_definition,\r\n\tctx,\r\n\t$$scope,\r\n\tslot_changes,\r\n\tget_slot_context_fn\r\n) {\r\n\tif (slot_changes) {\r\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\r\n\t\tslot.p(slot_context, slot_changes);\r\n\t}\r\n}\r\n\r\n/** @returns {void} */\r\nexport function update_slot(\r\n\tslot,\r\n\tslot_definition,\r\n\tctx,\r\n\t$$scope,\r\n\tdirty,\r\n\tget_slot_changes_fn,\r\n\tget_slot_context_fn\r\n) {\r\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\r\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\r\n}\r\n\r\n/** @returns {any[] | -1} */\r\nexport function get_all_dirty_from_scope($$scope) {\r\n\tif ($$scope.ctx.length > 32) {\r\n\t\tconst dirty = [];\r\n\t\tconst length = $$scope.ctx.length / 32;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tdirty[i] = -1;\r\n\t\t}\r\n\t\treturn dirty;\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n/** @returns {{}} */\r\nexport function exclude_internal_props(props) {\r\n\tconst result = {};\r\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\r\n\treturn result;\r\n}\r\n\r\n/** @returns {{}} */\r\nexport function compute_rest_props(props, keys) {\r\n\tconst rest = {};\r\n\tkeys = new Set(keys);\r\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\r\n\treturn rest;\r\n}\r\n\r\n/** @returns {{}} */\r\nexport function compute_slots(slots) {\r\n\tconst result = {};\r\n\tfor (const key in slots) {\r\n\t\tresult[key] = true;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/** @returns {(this: any, ...args: any[]) => void} */\r\nexport function once(fn) {\r\n\tlet ran = false;\r\n\treturn function (...args) {\r\n\t\tif (ran) return;\r\n\t\tran = true;\r\n\t\tfn.call(this, ...args);\r\n\t};\r\n}\r\n\r\nexport function null_to_empty(value) {\r\n\treturn value == null ? '' : value;\r\n}\r\n\r\nexport function set_store_value(store, ret, value) {\r\n\tstore.set(value);\r\n\treturn ret;\r\n}\r\n\r\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\nexport function action_destroyer(action_result) {\r\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\r\n}\r\n\r\n/** @param {number | string} value\r\n * @returns {[number, string]}\r\n */\r\nexport function split_css_unit(value) {\r\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\r\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\r\n}\r\n\r\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\r\n", "import { noop } from './utils.js';\r\n\r\nexport const is_client = typeof window !== 'undefined';\r\n\r\n/** @type {() => number} */\r\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\r\n\r\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\r\n\r\n// used internally for testing\r\n/** @returns {void} */\r\nexport function set_now(fn) {\r\n\tnow = fn;\r\n}\r\n\r\n/** @returns {void} */\r\nexport function set_raf(fn) {\r\n\traf = fn;\r\n}\r\n", "import { raf } from './environment.js';\r\n\r\nconst tasks = new Set();\r\n\r\n/**\r\n * @param {number} now\r\n * @returns {void}\r\n */\r\nfunction run_tasks(now) {\r\n\ttasks.forEach((task) => {\r\n\t\tif (!task.c(now)) {\r\n\t\t\ttasks.delete(task);\r\n\t\t\ttask.f();\r\n\t\t}\r\n\t});\r\n\tif (tasks.size !== 0) raf(run_tasks);\r\n}\r\n\r\n/**\r\n * For testing purposes only!\r\n * @returns {void}\r\n */\r\nexport function clear_loops() {\r\n\ttasks.clear();\r\n}\r\n\r\n/**\r\n * Creates a new task that runs on each raf frame\r\n * until it returns a falsy value or is aborted\r\n * @param {import('./private.js').TaskCallback} callback\r\n * @returns {import('./private.js').Task}\r\n */\r\nexport function loop(callback) {\r\n\t/** @type {import('./private.js').TaskEntry} */\r\n\tlet task;\r\n\tif (tasks.size === 0) raf(run_tasks);\r\n\treturn {\r\n\t\tpromise: new Promise((fulfill) => {\r\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\r\n\t\t}),\r\n\t\tabort() {\r\n\t\t\ttasks.delete(task);\r\n\t\t}\r\n\t};\r\n}\r\n", "/** @type {typeof globalThis} */\r\nexport const globals =\r\n\ttypeof window !== 'undefined'\r\n\t\t? window\r\n\t\t: typeof globalThis !== 'undefined'\r\n\t\t? globalThis\r\n\t\t: // @ts-ignore Node typings have this\r\n\t\t  global;\r\n", "import { globals } from './globals.js';\r\n\r\n/**\r\n * Resize observer singleton.\r\n * One listener per element only!\r\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\r\n */\r\nexport class ResizeObserverSingleton {\r\n\t/**\r\n\t * @private\r\n\t * @readonly\r\n\t * @type {WeakMap<Element, import('./private.js').Listener>}\r\n\t */\r\n\t_listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\r\n\r\n\t/**\r\n\t * @private\r\n\t * @type {ResizeObserver}\r\n\t */\r\n\t_observer = undefined;\r\n\r\n\t/** @type {ResizeObserverOptions} */\r\n\toptions;\r\n\r\n\t/** @param {ResizeObserverOptions} options */\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Element} element\r\n\t * @param {import('./private.js').Listener} listener\r\n\t * @returns {() => void}\r\n\t */\r\n\tobserve(element, listener) {\r\n\t\tthis._listeners.set(element, listener);\r\n\t\tthis._getObserver().observe(element, this.options);\r\n\t\treturn () => {\r\n\t\t\tthis._listeners.delete(element);\r\n\t\t\tthis._observer.unobserve(element); // this line can probably be removed\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_getObserver() {\r\n\t\treturn (\r\n\t\t\tthis._observer ??\r\n\t\t\t(this._observer = new ResizeObserver((entries) => {\r\n\t\t\t\tfor (const entry of entries) {\r\n\t\t\t\t\tResizeObserverSingleton.entries.set(entry.target, entry);\r\n\t\t\t\t\tthis._listeners.get(entry.target)?.(entry);\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Needs to be written like this to pass the tree-shake-test\r\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\r\n", "import { contenteditable_truthy_values, has_prop } from './utils.js';\r\n\r\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\r\n\r\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\r\n// at the end of hydration without touching the remaining nodes.\r\nlet is_hydrating = false;\r\n\r\n/**\r\n * @returns {void}\r\n */\r\nexport function start_hydrating() {\r\n\tis_hydrating = true;\r\n}\r\n\r\n/**\r\n * @returns {void}\r\n */\r\nexport function end_hydrating() {\r\n\tis_hydrating = false;\r\n}\r\n\r\n/**\r\n * @param {number} low\r\n * @param {number} high\r\n * @param {(index: number) => number} key\r\n * @param {number} value\r\n * @returns {number}\r\n */\r\nfunction upper_bound(low, high, key, value) {\r\n\t// Return first index of value larger than input value in the range [low, high)\r\n\twhile (low < high) {\r\n\t\tconst mid = low + ((high - low) >> 1);\r\n\t\tif (key(mid) <= value) {\r\n\t\t\tlow = mid + 1;\r\n\t\t} else {\r\n\t\t\thigh = mid;\r\n\t\t}\r\n\t}\r\n\treturn low;\r\n}\r\n\r\n/**\r\n * @param {NodeEx} target\r\n * @returns {void}\r\n */\r\nfunction init_hydrate(target) {\r\n\tif (target.hydrate_init) return;\r\n\ttarget.hydrate_init = true;\r\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\r\n\r\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\r\n\t// If target is <head>, there may be children without claim_order\r\n\tif (target.nodeName === 'HEAD') {\r\n\t\tconst my_children = [];\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tconst node = children[i];\r\n\t\t\tif (node.claim_order !== undefined) {\r\n\t\t\t\tmy_children.push(node);\r\n\t\t\t}\r\n\t\t}\r\n\t\tchildren = my_children;\r\n\t}\r\n\t/*\r\n\t * Reorder claimed children optimally.\r\n\t * We can reorder claimed children optimally by finding the longest subsequence of\r\n\t * nodes that are already claimed in order and only moving the rest. The longest\r\n\t * subsequence of nodes that are claimed in order can be found by\r\n\t * computing the longest increasing subsequence of .claim_order values.\r\n\t *\r\n\t * This algorithm is optimal in generating the least amount of reorder operations\r\n\t * possible.\r\n\t *\r\n\t * Proof:\r\n\t * We know that, given a set of reordering operations, the nodes that do not move\r\n\t * always form an increasing subsequence, since they do not move among each other\r\n\t * meaning that they must be already ordered among each other. Thus, the maximal\r\n\t * set of nodes that do not move form a longest increasing subsequence.\r\n\t */\r\n\t// Compute longest increasing subsequence\r\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\r\n\tconst m = new Int32Array(children.length + 1);\r\n\t// Predecessor indices + 1\r\n\tconst p = new Int32Array(children.length);\r\n\tm[0] = -1;\r\n\tlet longest = 0;\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst current = children[i].claim_order;\r\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\r\n\t\t// upper_bound returns first greater value, so we subtract one\r\n\t\t// with fast path for when we are on the current longest subsequence\r\n\t\tconst seq_len =\r\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\r\n\t\t\t\t? longest + 1\r\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\r\n\t\tp[i] = m[seq_len] + 1;\r\n\t\tconst new_len = seq_len + 1;\r\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\r\n\t\tm[new_len] = i;\r\n\t\tlongest = Math.max(new_len, longest);\r\n\t}\r\n\t// The longest increasing subsequence of nodes (initially reversed)\r\n\r\n\t/**\r\n\t * @type {NodeEx2[]}\r\n\t */\r\n\tconst lis = [];\r\n\t// The rest of the nodes, nodes that will be moved\r\n\r\n\t/**\r\n\t * @type {NodeEx2[]}\r\n\t */\r\n\tconst to_move = [];\r\n\tlet last = children.length - 1;\r\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\r\n\t\tlis.push(children[cur - 1]);\r\n\t\tfor (; last >= cur; last--) {\r\n\t\t\tto_move.push(children[last]);\r\n\t\t}\r\n\t\tlast--;\r\n\t}\r\n\tfor (; last >= 0; last--) {\r\n\t\tto_move.push(children[last]);\r\n\t}\r\n\tlis.reverse();\r\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\r\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\r\n\t// Finally, we move the nodes\r\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\r\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tconst anchor = j < lis.length ? lis[j] : null;\r\n\t\ttarget.insertBefore(to_move[i], anchor);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} target\r\n * @param {Node} node\r\n * @returns {void}\r\n */\r\nexport function append(target, node) {\r\n\ttarget.appendChild(node);\r\n}\r\n\r\n/**\r\n * @param {Node} target\r\n * @param {string} style_sheet_id\r\n * @param {string} styles\r\n * @returns {void}\r\n */\r\nexport function append_styles(target, style_sheet_id, styles) {\r\n\tconst append_styles_to = get_root_for_style(target);\r\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\r\n\t\tconst style = element('style');\r\n\t\tstyle.id = style_sheet_id;\r\n\t\tstyle.textContent = styles;\r\n\t\tappend_stylesheet(append_styles_to, style);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {ShadowRoot | Document}\r\n */\r\nexport function get_root_for_style(node) {\r\n\tif (!node) return document;\r\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\r\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\r\n\t\treturn /** @type {ShadowRoot} */ (root);\r\n\t}\r\n\treturn node.ownerDocument;\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {CSSStyleSheet}\r\n */\r\nexport function append_empty_stylesheet(node) {\r\n\tconst style_element = element('style');\r\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\r\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\r\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\r\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\r\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\r\n\tstyle_element.textContent = '/* empty */';\r\n\tappend_stylesheet(get_root_for_style(node), style_element);\r\n\treturn style_element.sheet;\r\n}\r\n\r\n/**\r\n * @param {ShadowRoot | Document} node\r\n * @param {HTMLStyleElement} style\r\n * @returns {CSSStyleSheet}\r\n */\r\nfunction append_stylesheet(node, style) {\r\n\tappend(/** @type {Document} */ (node).head || node, style);\r\n\treturn style.sheet;\r\n}\r\n\r\n/**\r\n * @param {NodeEx} target\r\n * @param {NodeEx} node\r\n * @returns {void}\r\n */\r\nexport function append_hydration(target, node) {\r\n\tif (is_hydrating) {\r\n\t\tinit_hydrate(target);\r\n\t\tif (\r\n\t\t\ttarget.actual_end_child === undefined ||\r\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\r\n\t\t) {\r\n\t\t\ttarget.actual_end_child = target.firstChild;\r\n\t\t}\r\n\t\t// Skip nodes of undefined ordering\r\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\r\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\r\n\t\t}\r\n\t\tif (node !== target.actual_end_child) {\r\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\r\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\r\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttarget.actual_end_child = node.nextSibling;\r\n\t\t}\r\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\r\n\t\ttarget.appendChild(node);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} target\r\n * @param {Node} node\r\n * @param {Node} [anchor]\r\n * @returns {void}\r\n */\r\nexport function insert(target, node, anchor) {\r\n\ttarget.insertBefore(node, anchor || null);\r\n}\r\n\r\n/**\r\n * @param {NodeEx} target\r\n * @param {NodeEx} node\r\n * @param {NodeEx} [anchor]\r\n * @returns {void}\r\n */\r\nexport function insert_hydration(target, node, anchor) {\r\n\tif (is_hydrating && !anchor) {\r\n\t\tappend_hydration(target, node);\r\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\r\n\t\ttarget.insertBefore(node, anchor || null);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {void}\r\n */\r\nexport function detach(node) {\r\n\tif (node.parentNode) {\r\n\t\tnode.parentNode.removeChild(node);\r\n\t}\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function destroy_each(iterations, detaching) {\r\n\tfor (let i = 0; i < iterations.length; i += 1) {\r\n\t\tif (iterations[i]) iterations[i].d(detaching);\r\n\t}\r\n}\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} K\r\n * @param {K} name\r\n * @returns {HTMLElementTagNameMap[K]}\r\n */\r\nexport function element(name) {\r\n\treturn document.createElement(name);\r\n}\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} K\r\n * @param {K} name\r\n * @param {string} is\r\n * @returns {HTMLElementTagNameMap[K]}\r\n */\r\nexport function element_is(name, is) {\r\n\treturn document.createElement(name, { is });\r\n}\r\n\r\n/**\r\n * @template T\r\n * @template {keyof T} K\r\n * @param {T} obj\r\n * @param {K[]} exclude\r\n * @returns {Pick<T, Exclude<keyof T, K>>}\r\n */\r\nexport function object_without_properties(obj, exclude) {\r\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\r\n\tfor (const k in obj) {\r\n\t\tif (\r\n\t\t\thas_prop(obj, k) &&\r\n\t\t\t// @ts-ignore\r\n\t\t\texclude.indexOf(k) === -1\r\n\t\t) {\r\n\t\t\t// @ts-ignore\r\n\t\t\ttarget[k] = obj[k];\r\n\t\t}\r\n\t}\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * @template {keyof SVGElementTagNameMap} K\r\n * @param {K} name\r\n * @returns {SVGElement}\r\n */\r\nexport function svg_element(name) {\r\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\n\r\n/**\r\n * @param {string} data\r\n * @returns {Text}\r\n */\r\nexport function text(data) {\r\n\treturn document.createTextNode(data);\r\n}\r\n\r\n/**\r\n * @returns {Text} */\r\nexport function space() {\r\n\treturn text(' ');\r\n}\r\n\r\n/**\r\n * @returns {Text} */\r\nexport function empty() {\r\n\treturn text('');\r\n}\r\n\r\n/**\r\n * @param {string} content\r\n * @returns {Comment}\r\n */\r\nexport function comment(content) {\r\n\treturn document.createComment(content);\r\n}\r\n\r\n/**\r\n * @param {EventTarget} node\r\n * @param {string} event\r\n * @param {EventListenerOrEventListenerObject} handler\r\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\r\n * @returns {() => void}\r\n */\r\nexport function listen(node, event, handler, options) {\r\n\tnode.addEventListener(event, handler, options);\r\n\treturn () => node.removeEventListener(event, handler, options);\r\n}\r\n\r\n/**\r\n * @returns {(event: any) => any} */\r\nexport function prevent_default(fn) {\r\n\treturn function (event) {\r\n\t\tevent.preventDefault();\r\n\t\t// @ts-ignore\r\n\t\treturn fn.call(this, event);\r\n\t};\r\n}\r\n\r\n/**\r\n * @returns {(event: any) => any} */\r\nexport function stop_propagation(fn) {\r\n\treturn function (event) {\r\n\t\tevent.stopPropagation();\r\n\t\t// @ts-ignore\r\n\t\treturn fn.call(this, event);\r\n\t};\r\n}\r\n\r\n/**\r\n * @returns {(event: any) => any} */\r\nexport function stop_immediate_propagation(fn) {\r\n\treturn function (event) {\r\n\t\tevent.stopImmediatePropagation();\r\n\t\t// @ts-ignore\r\n\t\treturn fn.call(this, event);\r\n\t};\r\n}\r\n\r\n/**\r\n * @returns {(event: any) => void} */\r\nexport function self(fn) {\r\n\treturn function (event) {\r\n\t\t// @ts-ignore\r\n\t\tif (event.target === this) fn.call(this, event);\r\n\t};\r\n}\r\n\r\n/**\r\n * @returns {(event: any) => void} */\r\nexport function trusted(fn) {\r\n\treturn function (event) {\r\n\t\t// @ts-ignore\r\n\t\tif (event.isTrusted) fn.call(this, event);\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @param {string} attribute\r\n * @param {string} [value]\r\n * @returns {void}\r\n */\r\nexport function attr(node, attribute, value) {\r\n\tif (value == null) node.removeAttribute(attribute);\r\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\r\n}\r\n/**\r\n * List of attributes that should always be set through the attr method,\r\n * because updating them through the property setter doesn't work reliably.\r\n * In the example of `width`/`height`, the problem is that the setter only\r\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\r\n * If this list becomes too big, rethink this approach.\r\n */\r\nconst always_set_through_set_attribute = ['width', 'height'];\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {{ [x: string]: string }} attributes\r\n * @returns {void}\r\n */\r\nexport function set_attributes(node, attributes) {\r\n\t// @ts-ignore\r\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\r\n\tfor (const key in attributes) {\r\n\t\tif (attributes[key] == null) {\r\n\t\t\tnode.removeAttribute(key);\r\n\t\t} else if (key === 'style') {\r\n\t\t\tnode.style.cssText = attributes[key];\r\n\t\t} else if (key === '__value') {\r\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\r\n\t\t} else if (\r\n\t\t\tdescriptors[key] &&\r\n\t\t\tdescriptors[key].set &&\r\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\r\n\t\t) {\r\n\t\t\tnode[key] = attributes[key];\r\n\t\t} else {\r\n\t\t\tattr(node, key, attributes[key]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {{ [x: string]: string }} attributes\r\n * @returns {void}\r\n */\r\nexport function set_svg_attributes(node, attributes) {\r\n\tfor (const key in attributes) {\r\n\t\tattr(node, key, attributes[key]);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Record<string, unknown>} data_map\r\n * @returns {void}\r\n */\r\nexport function set_custom_element_data_map(node, data_map) {\r\n\tObject.keys(data_map).forEach((key) => {\r\n\t\tset_custom_element_data(node, key, data_map[key]);\r\n\t});\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function set_custom_element_data(node, prop, value) {\r\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\r\n\tif (lower in node) {\r\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\r\n\t} else if (prop in node) {\r\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\r\n\t} else {\r\n\t\tattr(node, prop, value);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} tag\r\n */\r\nexport function set_dynamic_element_data(tag) {\r\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\r\n}\r\n\r\n/**\r\n * @returns {void}\r\n */\r\nexport function xlink_attr(node, attribute, value) {\r\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} node\r\n * @returns {string}\r\n */\r\nexport function get_svelte_dataset(node) {\r\n\treturn node.dataset.svelteH;\r\n}\r\n\r\n/**\r\n * @returns {unknown[]} */\r\nexport function get_binding_group_value(group, __value, checked) {\r\n\tconst value = new Set();\r\n\tfor (let i = 0; i < group.length; i += 1) {\r\n\t\tif (group[i].checked) value.add(group[i].__value);\r\n\t}\r\n\tif (!checked) {\r\n\t\tvalue.delete(__value);\r\n\t}\r\n\treturn Array.from(value);\r\n}\r\n\r\n/**\r\n * @param {HTMLInputElement[]} group\r\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\r\n */\r\nexport function init_binding_group(group) {\r\n\t/**\r\n\t * @type {HTMLInputElement[]} */\r\n\tlet _inputs;\r\n\treturn {\r\n\t\t/* push */ p(...inputs) {\r\n\t\t\t_inputs = inputs;\r\n\t\t\t_inputs.forEach((input) => group.push(input));\r\n\t\t},\r\n\t\t/* remove */ r() {\r\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {number[]} indexes\r\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\r\n */\r\nexport function init_binding_group_dynamic(group, indexes) {\r\n\t/**\r\n\t * @type {HTMLInputElement[]} */\r\n\tlet _group = get_binding_group(group);\r\n\r\n\t/**\r\n\t * @type {HTMLInputElement[]} */\r\n\tlet _inputs;\r\n\r\n\tfunction get_binding_group(group) {\r\n\t\tfor (let i = 0; i < indexes.length; i++) {\r\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\r\n\t\t}\r\n\t\treturn group;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\tfunction push() {\r\n\t\t_inputs.forEach((input) => _group.push(input));\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\tfunction remove() {\r\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\r\n\t}\r\n\treturn {\r\n\t\t/* update */ u(new_indexes) {\r\n\t\t\tindexes = new_indexes;\r\n\t\t\tconst new_group = get_binding_group(group);\r\n\t\t\tif (new_group !== _group) {\r\n\t\t\t\tremove();\r\n\t\t\t\t_group = new_group;\r\n\t\t\t\tpush();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* push */ p(...inputs) {\r\n\t\t\t_inputs = inputs;\r\n\t\t\tpush();\r\n\t\t},\r\n\t\t/* remove */ r: remove\r\n\t};\r\n}\r\n\r\n/** @returns {number} */\r\nexport function to_number(value) {\r\n\treturn value === '' ? null : +value;\r\n}\r\n\r\n/** @returns {any[]} */\r\nexport function time_ranges_to_array(ranges) {\r\n\tconst array = [];\r\n\tfor (let i = 0; i < ranges.length; i += 1) {\r\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @returns {ChildNode[]}\r\n */\r\nexport function children(element) {\r\n\treturn Array.from(element.childNodes);\r\n}\r\n\r\n/**\r\n * @param {ChildNodeArray} nodes\r\n * @returns {void}\r\n */\r\nfunction init_claim_info(nodes) {\r\n\tif (nodes.claim_info === undefined) {\r\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\r\n\t}\r\n}\r\n\r\n/**\r\n * @template {ChildNodeEx} R\r\n * @param {ChildNodeArray} nodes\r\n * @param {(node: ChildNodeEx) => node is R} predicate\r\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\r\n * @param {() => R} create_node\r\n * @param {boolean} dont_update_last_index\r\n * @returns {R}\r\n */\r\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\r\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\r\n\tinit_claim_info(nodes);\r\n\tconst result_node = (() => {\r\n\t\t// We first try to find an element after the previous one\r\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (predicate(node)) {\r\n\t\t\t\tconst replacement = process_node(node);\r\n\t\t\t\tif (replacement === undefined) {\r\n\t\t\t\t\tnodes.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnodes[i] = replacement;\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_update_last_index) {\r\n\t\t\t\t\tnodes.claim_info.last_index = i;\r\n\t\t\t\t}\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Otherwise, we try to find one before\r\n\t\t// We iterate in reverse so that we don't go too far back\r\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (predicate(node)) {\r\n\t\t\t\tconst replacement = process_node(node);\r\n\t\t\t\tif (replacement === undefined) {\r\n\t\t\t\t\tnodes.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnodes[i] = replacement;\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_update_last_index) {\r\n\t\t\t\t\tnodes.claim_info.last_index = i;\r\n\t\t\t\t} else if (replacement === undefined) {\r\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\r\n\t\t\t\t\tnodes.claim_info.last_index--;\r\n\t\t\t\t}\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If we can't find any matching node, we create a new one\r\n\t\treturn create_node();\r\n\t})();\r\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\r\n\tnodes.claim_info.total_claimed += 1;\r\n\treturn result_node;\r\n}\r\n\r\n/**\r\n * @param {ChildNodeArray} nodes\r\n * @param {string} name\r\n * @param {{ [key: string]: boolean }} attributes\r\n * @param {(name: string) => Element | SVGElement} create_element\r\n * @returns {Element | SVGElement}\r\n */\r\nfunction claim_element_base(nodes, name, attributes, create_element) {\r\n\treturn claim_node(\r\n\t\tnodes,\r\n\t\t/** @returns {node is Element | SVGElement} */\r\n\t\t(node) => node.nodeName === name,\r\n\t\t/** @param {Element} node */\r\n\t\t(node) => {\r\n\t\t\tconst remove = [];\r\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\r\n\t\t\t\tconst attribute = node.attributes[j];\r\n\t\t\t\tif (!attributes[attribute.name]) {\r\n\t\t\t\t\tremove.push(attribute.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\t\t() => create_element(name)\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {ChildNodeArray} nodes\r\n * @param {string} name\r\n * @param {{ [key: string]: boolean }} attributes\r\n * @returns {Element | SVGElement}\r\n */\r\nexport function claim_element(nodes, name, attributes) {\r\n\treturn claim_element_base(nodes, name, attributes, element);\r\n}\r\n\r\n/**\r\n * @param {ChildNodeArray} nodes\r\n * @param {string} name\r\n * @param {{ [key: string]: boolean }} attributes\r\n * @returns {Element | SVGElement}\r\n */\r\nexport function claim_svg_element(nodes, name, attributes) {\r\n\treturn claim_element_base(nodes, name, attributes, svg_element);\r\n}\r\n\r\n/**\r\n * @param {ChildNodeArray} nodes\r\n * @returns {Text}\r\n */\r\nexport function claim_text(nodes, data) {\r\n\treturn claim_node(\r\n\t\tnodes,\r\n\t\t/** @returns {node is Text} */\r\n\t\t(node) => node.nodeType === 3,\r\n\t\t/** @param {Text} node */\r\n\t\t(node) => {\r\n\t\t\tconst data_str = '' + data;\r\n\t\t\tif (node.data.startsWith(data_str)) {\r\n\t\t\t\tif (node.data.length !== data_str.length) {\r\n\t\t\t\t\treturn node.splitText(data_str.length);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnode.data = data_str;\r\n\t\t\t}\r\n\t\t},\r\n\t\t() => text(data),\r\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\r\n\t);\r\n}\r\n\r\n/**\r\n * @returns {Text} */\r\nexport function claim_space(nodes) {\r\n\treturn claim_text(nodes, ' ');\r\n}\r\n\r\n/**\r\n * @param {ChildNodeArray} nodes\r\n * @returns {Comment}\r\n */\r\nexport function claim_comment(nodes, data) {\r\n\treturn claim_node(\r\n\t\tnodes,\r\n\t\t/** @returns {node is Comment} */\r\n\t\t(node) => node.nodeType === 8,\r\n\t\t/** @param {Comment} node */\r\n\t\t(node) => {\r\n\t\t\tnode.data = '' + data;\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\t\t() => comment(data),\r\n\t\ttrue\r\n\t);\r\n}\r\n\r\nfunction get_comment_idx(nodes, text, start) {\r\n\tfor (let i = start; i < nodes.length; i += 1) {\r\n\t\tconst node = nodes[i];\r\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * @param {boolean} is_svg\r\n * @returns {HtmlTagHydration}\r\n */\r\nexport function claim_html_tag(nodes, is_svg) {\r\n\t// find html opening tag\r\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\r\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\r\n\tif (start_index === -1 || end_index === -1) {\r\n\t\treturn new HtmlTagHydration(is_svg);\r\n\t}\r\n\r\n\tinit_claim_info(nodes);\r\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\r\n\tdetach(html_tag_nodes[0]);\r\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\r\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\r\n\tif (claimed_nodes.length === 0) {\r\n\t\treturn new HtmlTagHydration(is_svg);\r\n\t}\r\n\tfor (const n of claimed_nodes) {\r\n\t\tn.claim_order = nodes.claim_info.total_claimed;\r\n\t\tnodes.claim_info.total_claimed += 1;\r\n\t}\r\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\r\n}\r\n\r\n/**\r\n * @param {Text} text\r\n * @param {unknown} data\r\n * @returns {void}\r\n */\r\nexport function set_data(text, data) {\r\n\tdata = '' + data;\r\n\tif (text.data === data) return;\r\n\ttext.data = /** @type {string} */ (data);\r\n}\r\n\r\n/**\r\n * @param {Text} text\r\n * @param {unknown} data\r\n * @returns {void}\r\n */\r\nexport function set_data_contenteditable(text, data) {\r\n\tdata = '' + data;\r\n\tif (text.wholeText === data) return;\r\n\ttext.data = /** @type {string} */ (data);\r\n}\r\n\r\n/**\r\n * @param {Text} text\r\n * @param {unknown} data\r\n * @param {string} attr_value\r\n * @returns {void}\r\n */\r\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\r\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\r\n\t\tset_data_contenteditable(text, data);\r\n\t} else {\r\n\t\tset_data(text, data);\r\n\t}\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function set_input_value(input, value) {\r\n\tinput.value = value == null ? '' : value;\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function set_input_type(input, type) {\r\n\ttry {\r\n\t\tinput.type = type;\r\n\t} catch (e) {\r\n\t\t// do nothing\r\n\t}\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function set_style(node, key, value, important) {\r\n\tif (value == null) {\r\n\t\tnode.style.removeProperty(key);\r\n\t} else {\r\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\r\n\t}\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function select_option(select, value, mounting) {\r\n\tfor (let i = 0; i < select.options.length; i += 1) {\r\n\t\tconst option = select.options[i];\r\n\t\tif (option.__value === value) {\r\n\t\t\toption.selected = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (!mounting || value !== undefined) {\r\n\t\tselect.selectedIndex = -1; // no option should be selected\r\n\t}\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function select_options(select, value) {\r\n\tfor (let i = 0; i < select.options.length; i += 1) {\r\n\t\tconst option = select.options[i];\r\n\t\toption.selected = ~value.indexOf(option.__value);\r\n\t}\r\n}\r\n\r\nexport function select_value(select) {\r\n\tconst selected_option = select.querySelector(':checked');\r\n\treturn selected_option && selected_option.__value;\r\n}\r\n\r\nexport function select_multiple_value(select) {\r\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\r\n}\r\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\r\n// so we cache the result instead\r\n\r\n/**\r\n * @type {boolean} */\r\nlet crossorigin;\r\n\r\n/**\r\n * @returns {boolean} */\r\nexport function is_crossorigin() {\r\n\tif (crossorigin === undefined) {\r\n\t\tcrossorigin = false;\r\n\t\ttry {\r\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\r\n\t\t\t\tvoid window.parent.document;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tcrossorigin = true;\r\n\t\t}\r\n\t}\r\n\treturn crossorigin;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} node\r\n * @param {() => void} fn\r\n * @returns {() => void}\r\n */\r\nexport function add_iframe_resize_listener(node, fn) {\r\n\tconst computed_style = getComputedStyle(node);\r\n\tif (computed_style.position === 'static') {\r\n\t\tnode.style.position = 'relative';\r\n\t}\r\n\tconst iframe = element('iframe');\r\n\tiframe.setAttribute(\r\n\t\t'style',\r\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\r\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\r\n\t);\r\n\tiframe.setAttribute('aria-hidden', 'true');\r\n\tiframe.tabIndex = -1;\r\n\tconst crossorigin = is_crossorigin();\r\n\r\n\t/**\r\n\t * @type {() => void}\r\n\t */\r\n\tlet unsubscribe;\r\n\tif (crossorigin) {\r\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\r\n\t\tunsubscribe = listen(\r\n\t\t\twindow,\r\n\t\t\t'message',\r\n\t\t\t/** @param {MessageEvent} event */ (event) => {\r\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\tiframe.src = 'about:blank';\r\n\t\tiframe.onload = () => {\r\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\r\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\r\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\r\n\t\t\tfn();\r\n\t\t};\r\n\t}\r\n\tappend(node, iframe);\r\n\treturn () => {\r\n\t\tif (crossorigin) {\r\n\t\t\tunsubscribe();\r\n\t\t} else if (unsubscribe && iframe.contentWindow) {\r\n\t\t\tunsubscribe();\r\n\t\t}\r\n\t\tdetach(iframe);\r\n\t};\r\n}\r\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\r\n\tbox: 'content-box'\r\n});\r\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\r\n\tbox: 'border-box'\r\n});\r\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\r\n\t{ box: 'device-pixel-content-box' }\r\n);\r\nexport { ResizeObserverSingleton };\r\n\r\n/**\r\n * @returns {void} */\r\nexport function toggle_class(element, name, toggle) {\r\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\r\n\telement.classList.toggle(name, !!toggle);\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {string} type\r\n * @param {T} [detail]\r\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\r\n * @returns {CustomEvent<T>}\r\n */\r\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\r\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\r\n}\r\n\r\n/**\r\n * @param {string} selector\r\n * @param {HTMLElement} parent\r\n * @returns {ChildNodeArray}\r\n */\r\nexport function query_selector_all(selector, parent = document.body) {\r\n\treturn Array.from(parent.querySelectorAll(selector));\r\n}\r\n\r\n/**\r\n * @param {string} nodeId\r\n * @param {HTMLElement} head\r\n * @returns {any[]}\r\n */\r\nexport function head_selector(nodeId, head) {\r\n\tconst result = [];\r\n\tlet started = 0;\r\n\tfor (const node of head.childNodes) {\r\n\t\tif (node.nodeType === 8 /* comment node */) {\r\n\t\t\tconst comment = node.textContent.trim();\r\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\r\n\t\t\t\tstarted -= 1;\r\n\t\t\t\tresult.push(node);\r\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\r\n\t\t\t\tstarted += 1;\r\n\t\t\t\tresult.push(node);\r\n\t\t\t}\r\n\t\t} else if (started > 0) {\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n/** */\r\nexport class HtmlTag {\r\n\t/**\r\n\t * @private\r\n\t * @default false\r\n\t */\r\n\tis_svg = false;\r\n\t/** parent for creating node */\r\n\te = undefined;\r\n\t/** html tag nodes */\r\n\tn = undefined;\r\n\t/** target */\r\n\tt = undefined;\r\n\t/** anchor */\r\n\ta = undefined;\r\n\tconstructor(is_svg = false) {\r\n\t\tthis.is_svg = is_svg;\r\n\t\tthis.e = this.n = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} html\r\n\t * @returns {void}\r\n\t */\r\n\tc(html) {\r\n\t\tthis.h(html);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} html\r\n\t * @param {HTMLElement | SVGElement} target\r\n\t * @param {HTMLElement | SVGElement} anchor\r\n\t * @returns {void}\r\n\t */\r\n\tm(html, target, anchor = null) {\r\n\t\tif (!this.e) {\r\n\t\t\tif (this.is_svg)\r\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\r\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\r\n\t\t\t\tthis.e = element(\r\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\r\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\tthis.t =\r\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\r\n\t\t\t\t\t? target\r\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\r\n\t\t\tthis.c(html);\r\n\t\t}\r\n\t\tthis.i(anchor);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} html\r\n\t * @returns {void}\r\n\t */\r\n\th(html) {\r\n\t\tthis.e.innerHTML = html;\r\n\t\tthis.n = Array.from(\r\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\ti(anchor) {\r\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\r\n\t\t\tinsert(this.t, this.n[i], anchor);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} html\r\n\t * @returns {void}\r\n\t */\r\n\tp(html) {\r\n\t\tthis.d();\r\n\t\tthis.h(html);\r\n\t\tthis.i(this.a);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\td() {\r\n\t\tthis.n.forEach(detach);\r\n\t}\r\n}\r\n\r\nexport class HtmlTagHydration extends HtmlTag {\r\n\t/** @type {Element[]} hydration claimed nodes */\r\n\tl = undefined;\r\n\r\n\tconstructor(is_svg = false, claimed_nodes) {\r\n\t\tsuper(is_svg);\r\n\t\tthis.e = this.n = null;\r\n\t\tthis.l = claimed_nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} html\r\n\t * @returns {void}\r\n\t */\r\n\tc(html) {\r\n\t\tif (this.l) {\r\n\t\t\tthis.n = this.l;\r\n\t\t} else {\r\n\t\t\tsuper.c(html);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\ti(anchor) {\r\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\r\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {NamedNodeMap} attributes\r\n * @returns {{}}\r\n */\r\nexport function attribute_to_object(attributes) {\r\n\tconst result = {};\r\n\tfor (const attribute of attributes) {\r\n\t\tresult[attribute.name] = attribute.value;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nconst escaped = {\r\n\t'\"': '&quot;',\r\n\t'&': '&amp;',\r\n\t'<': '&lt;'\r\n};\r\n\r\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\r\n\r\n/**\r\n * Note that the attribute itself should be surrounded in double quotes\r\n * @param {any} attribute\r\n */\r\nfunction escape_attribute(attribute) {\r\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\r\n}\r\n\r\n/**\r\n * @param {Record<string, string>} attributes\r\n */\r\nexport function stringify_spread(attributes) {\r\n\tlet str = ' ';\r\n\tfor (const key in attributes) {\r\n\t\tif (attributes[key] != null) {\r\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\r\n\t\t}\r\n\t}\r\n\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @returns {{}}\r\n */\r\nexport function get_custom_elements_slots(element) {\r\n\tconst result = {};\r\n\telement.childNodes.forEach(\r\n\t\t/** @param {Element} node */ (node) => {\r\n\t\t\tresult[node.slot || 'default'] = true;\r\n\t\t}\r\n\t);\r\n\treturn result;\r\n}\r\n\r\nexport function construct_svelte_component(component, props) {\r\n\treturn new component(props);\r\n}\r\n\r\n/**\r\n * @typedef {Node & {\r\n * \tclaim_order?: number;\r\n * \thydrate_init?: true;\r\n * \tactual_end_child?: NodeEx;\r\n * \tchildNodes: NodeListOf<NodeEx>;\r\n * }} NodeEx\r\n */\r\n\r\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\r\n\r\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\r\n\r\n/**\r\n * @typedef {ChildNodeEx[] & {\r\n * \tclaim_info?: {\r\n * \t\tlast_index: number;\r\n * \t\ttotal_claimed: number;\r\n * \t};\r\n * }} ChildNodeArray\r\n */\r\n", "import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\r\nimport { raf } from './environment.js';\r\n\r\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\r\n// https://github.com/sveltejs/svelte/issues/3624\r\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\r\nconst managed_styles = new Map();\r\n\r\nlet active = 0;\r\n\r\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\r\n/**\r\n * @param {string} str\r\n * @returns {number}\r\n */\r\nfunction hash(str) {\r\n\tlet hash = 5381;\r\n\tlet i = str.length;\r\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\r\n\treturn hash >>> 0;\r\n}\r\n\r\n/**\r\n * @param {Document | ShadowRoot} doc\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @returns {{ stylesheet: any; rules: {}; }}\r\n */\r\nfunction create_style_information(doc, node) {\r\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\r\n\tmanaged_styles.set(doc, info);\r\n\treturn info;\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} duration\r\n * @param {number} delay\r\n * @param {(t: number) => number} ease\r\n * @param {(t: number, u: number) => string} fn\r\n * @param {number} uid\r\n * @returns {string}\r\n */\r\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\r\n\tconst step = 16.666 / duration;\r\n\tlet keyframes = '{\\n';\r\n\tfor (let p = 0; p <= 1; p += step) {\r\n\t\tconst t = a + (b - a) * ease(p);\r\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\r\n\t}\r\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\r\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\r\n\tconst doc = get_root_for_style(node);\r\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\r\n\tif (!rules[name]) {\r\n\t\trules[name] = true;\r\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\r\n\t}\r\n\tconst animation = node.style.animation || '';\r\n\tnode.style.animation = `${\r\n\t\tanimation ? `${animation}, ` : ''\r\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\r\n\tactive += 1;\r\n\treturn name;\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {string} [name]\r\n * @returns {void}\r\n */\r\nexport function delete_rule(node, name) {\r\n\tconst previous = (node.style.animation || '').split(', ');\r\n\tconst next = previous.filter(\r\n\t\tname\r\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\r\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\r\n\t);\r\n\tconst deleted = previous.length - next.length;\r\n\tif (deleted) {\r\n\t\tnode.style.animation = next.join(', ');\r\n\t\tactive -= deleted;\r\n\t\tif (!active) clear_rules();\r\n\t}\r\n}\r\n\r\n/** @returns {void} */\r\nexport function clear_rules() {\r\n\traf(() => {\r\n\t\tif (active) return;\r\n\t\tmanaged_styles.forEach((info) => {\r\n\t\t\tconst { ownerNode } = info.stylesheet;\r\n\t\t\t// there is no ownerNode if it runs on jsdom.\r\n\t\t\tif (ownerNode) detach(ownerNode);\r\n\t\t});\r\n\t\tmanaged_styles.clear();\r\n\t});\r\n}\r\n", "import { identity as linear, noop } from './utils.js';\r\nimport { now } from './environment.js';\r\nimport { loop } from './loop.js';\r\nimport { create_rule, delete_rule } from './style_manager.js';\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {import('./private.js').PositionRect} from\r\n * @param {import('./private.js').AnimationFn} fn\r\n */\r\nexport function create_animation(node, from, fn, params) {\r\n\tif (!from) return noop;\r\n\tconst to = node.getBoundingClientRect();\r\n\tif (\r\n\t\tfrom.left === to.left &&\r\n\t\tfrom.right === to.right &&\r\n\t\tfrom.top === to.top &&\r\n\t\tfrom.bottom === to.bottom\r\n\t)\r\n\t\treturn noop;\r\n\tconst {\r\n\t\tdelay = 0,\r\n\t\tduration = 300,\r\n\t\teasing = linear,\r\n\t\t// @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\r\n\t\tstart: start_time = now() + delay,\r\n\t\t// @ts-ignore todo:\r\n\t\tend = start_time + duration,\r\n\t\ttick = noop,\r\n\t\tcss\r\n\t} = fn(node, { from, to }, params);\r\n\tlet running = true;\r\n\tlet started = false;\r\n\tlet name;\r\n\t/** @returns {void} */\r\n\tfunction start() {\r\n\t\tif (css) {\r\n\t\t\tname = create_rule(node, 0, 1, duration, delay, easing, css);\r\n\t\t}\r\n\t\tif (!delay) {\r\n\t\t\tstarted = true;\r\n\t\t}\r\n\t}\r\n\t/** @returns {void} */\r\n\tfunction stop() {\r\n\t\tif (css) delete_rule(node, name);\r\n\t\trunning = false;\r\n\t}\r\n\tloop((now) => {\r\n\t\tif (!started && now >= start_time) {\r\n\t\t\tstarted = true;\r\n\t\t}\r\n\t\tif (started && now >= end) {\r\n\t\t\ttick(1, 0);\r\n\t\t\tstop();\r\n\t\t}\r\n\t\tif (!running) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (started) {\r\n\t\t\tconst p = now - start_time;\r\n\t\t\tconst t = 0 + 1 * easing(p / duration);\r\n\t\t\ttick(t, 1 - t);\r\n\t\t}\r\n\t\treturn true;\r\n\t});\r\n\tstart();\r\n\ttick(0, 1);\r\n\treturn stop;\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @returns {void}\r\n */\r\nexport function fix_position(node) {\r\n\tconst style = getComputedStyle(node);\r\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\r\n\t\tconst { width, height } = style;\r\n\t\tconst a = node.getBoundingClientRect();\r\n\t\tnode.style.position = 'absolute';\r\n\t\tnode.style.width = width;\r\n\t\tnode.style.height = height;\r\n\t\tadd_transform(node, a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {import('./private.js').PositionRect} a\r\n * @returns {void}\r\n */\r\nexport function add_transform(node, a) {\r\n\tconst b = node.getBoundingClientRect();\r\n\tif (a.left !== b.left || a.top !== b.top) {\r\n\t\tconst style = getComputedStyle(node);\r\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\r\n\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\r\n\t}\r\n}\r\n", "import { custom_event } from './dom.js';\r\n\r\nexport let current_component;\r\n\r\n/** @returns {void} */\r\nexport function set_current_component(component) {\r\n\tcurrent_component = component;\r\n}\r\n\r\nexport function get_current_component() {\r\n\tif (!current_component) throw new Error('Function called outside component initialization');\r\n\treturn current_component;\r\n}\r\n\r\n/**\r\n * Schedules a callback to run immediately before the component is updated after any state change.\r\n *\r\n * The first time the callback runs will be before the initial `onMount`\r\n *\r\n * https://svelte.dev/docs/svelte#beforeupdate\r\n * @param {() => any} fn\r\n * @returns {void}\r\n */\r\nexport function beforeUpdate(fn) {\r\n\tget_current_component().$$.before_update.push(fn);\r\n}\r\n\r\n/**\r\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\r\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\r\n * it can be called from an external module).\r\n *\r\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\r\n *\r\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\r\n *\r\n * https://svelte.dev/docs/svelte#onmount\r\n * @template T\r\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\r\n * @returns {void}\r\n */\r\nexport function onMount(fn) {\r\n\tget_current_component().$$.on_mount.push(fn);\r\n}\r\n\r\n/**\r\n * Schedules a callback to run immediately after the component has been updated.\r\n *\r\n * The first time the callback runs will be after the initial `onMount`\r\n *\r\n * https://svelte.dev/docs/svelte#afterupdate\r\n * @param {() => any} fn\r\n * @returns {void}\r\n */\r\nexport function afterUpdate(fn) {\r\n\tget_current_component().$$.after_update.push(fn);\r\n}\r\n\r\n/**\r\n * Schedules a callback to run immediately before the component is unmounted.\r\n *\r\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\r\n * only one that runs inside a server-side component.\r\n *\r\n * https://svelte.dev/docs/svelte#ondestroy\r\n * @param {() => any} fn\r\n * @returns {void}\r\n */\r\nexport function onDestroy(fn) {\r\n\tget_current_component().$$.on_destroy.push(fn);\r\n}\r\n\r\n/**\r\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\r\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\r\n *\r\n * Component events created with `createEventDispatcher` create a\r\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\r\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\r\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\r\n * property and can contain any type of data.\r\n *\r\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\r\n * ```ts\r\n * const dispatch = createEventDispatcher<{\r\n *  loaded: never; // does not take a detail argument\r\n *  change: string; // takes a detail argument of type string, which is required\r\n *  optional: number | null; // takes an optional detail argument of type number\r\n * }>();\r\n * ```\r\n *\r\n * https://svelte.dev/docs/svelte#createeventdispatcher\r\n * @template {Record<string, any>} [EventMap=any]\r\n * @returns {import('./public.js').EventDispatcher<EventMap>}\r\n */\r\nexport function createEventDispatcher() {\r\n\tconst component = get_current_component();\r\n\treturn (type, detail, { cancelable = false } = {}) => {\r\n\t\tconst callbacks = component.$$.callbacks[type];\r\n\t\tif (callbacks) {\r\n\t\t\t// TODO are there situations where events could be dispatched\r\n\t\t\t// in a server (non-DOM) environment?\r\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\r\n\t\t\tcallbacks.slice().forEach((fn) => {\r\n\t\t\t\tfn.call(component, event);\r\n\t\t\t});\r\n\t\t\treturn !event.defaultPrevented;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n}\r\n\r\n/**\r\n * Associates an arbitrary `context` object with the current component and the specified `key`\r\n * and returns that object. The context is then available to children of the component\r\n * (including slotted content) with `getContext`.\r\n *\r\n * Like lifecycle functions, this must be called during component initialisation.\r\n *\r\n * https://svelte.dev/docs/svelte#setcontext\r\n * @template T\r\n * @param {any} key\r\n * @param {T} context\r\n * @returns {T}\r\n */\r\nexport function setContext(key, context) {\r\n\tget_current_component().$$.context.set(key, context);\r\n\treturn context;\r\n}\r\n\r\n/**\r\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\r\n * Must be called during component initialisation.\r\n *\r\n * https://svelte.dev/docs/svelte#getcontext\r\n * @template T\r\n * @param {any} key\r\n * @returns {T}\r\n */\r\nexport function getContext(key) {\r\n\treturn get_current_component().$$.context.get(key);\r\n}\r\n\r\n/**\r\n * Retrieves the whole context map that belongs to the closest parent component.\r\n * Must be called during component initialisation. Useful, for example, if you\r\n * programmatically create a component and want to pass the existing context to it.\r\n *\r\n * https://svelte.dev/docs/svelte#getallcontexts\r\n * @template {Map<any, any>} [T=Map<any, any>]\r\n * @returns {T}\r\n */\r\nexport function getAllContexts() {\r\n\treturn get_current_component().$$.context;\r\n}\r\n\r\n/**\r\n * Checks whether a given `key` has been set in the context of a parent component.\r\n * Must be called during component initialisation.\r\n *\r\n * https://svelte.dev/docs/svelte#hascontext\r\n * @param {any} key\r\n * @returns {boolean}\r\n */\r\nexport function hasContext(key) {\r\n\treturn get_current_component().$$.context.has(key);\r\n}\r\n\r\n// TODO figure out if we still want to support\r\n// shorthand events, or if we want to implement\r\n// a real bubbling mechanism\r\n/**\r\n * @param component\r\n * @param event\r\n * @returns {void}\r\n */\r\nexport function bubble(component, event) {\r\n\tconst callbacks = component.$$.callbacks[event.type];\r\n\tif (callbacks) {\r\n\t\t// @ts-ignore\r\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\r\n\t}\r\n}\r\n", "import { run_all } from './utils.js';\r\nimport { current_component, set_current_component } from './lifecycle.js';\r\n\r\nexport const dirty_components = [];\r\nexport const intros = { enabled: false };\r\nexport const binding_callbacks = [];\r\n\r\nlet render_callbacks = [];\r\n\r\nconst flush_callbacks = [];\r\n\r\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\r\n\r\nlet update_scheduled = false;\r\n\r\n/** @returns {void} */\r\nexport function schedule_update() {\r\n\tif (!update_scheduled) {\r\n\t\tupdate_scheduled = true;\r\n\t\tresolved_promise.then(flush);\r\n\t}\r\n}\r\n\r\n/** @returns {Promise<void>} */\r\nexport function tick() {\r\n\tschedule_update();\r\n\treturn resolved_promise;\r\n}\r\n\r\n/** @returns {void} */\r\nexport function add_render_callback(fn) {\r\n\trender_callbacks.push(fn);\r\n}\r\n\r\n/** @returns {void} */\r\nexport function add_flush_callback(fn) {\r\n\tflush_callbacks.push(fn);\r\n}\r\n\r\n// flush() calls callbacks in this order:\r\n// 1. All beforeUpdate callbacks, in order: parents before children\r\n// 2. All bind:this callbacks, in reverse order: children before parents.\r\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\r\n//    for afterUpdates called during the initial onMount, which are called in\r\n//    reverse order: children before parents.\r\n// Since callbacks might update component values, which could trigger another\r\n// call to flush(), the following steps guard against this:\r\n// 1. During beforeUpdate, any updated components will be added to the\r\n//    dirty_components array and will cause a reentrant call to flush(). Because\r\n//    the flush index is kept outside the function, the reentrant call will pick\r\n//    up where the earlier call left off and go through all dirty components. The\r\n//    current_component value is saved and restored so that the reentrant call will\r\n//    not interfere with the \"parent\" flush() call.\r\n// 2. bind:this callbacks cannot trigger new flush() calls.\r\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\r\n//    callback called a second time; the seen_callbacks set, outside the flush()\r\n//    function, guarantees this behavior.\r\nconst seen_callbacks = new Set();\r\n\r\nlet flushidx = 0; // Do *not* move this inside the flush() function\r\n\r\n/** @returns {void} */\r\nexport function flush() {\r\n\t// Do not reenter flush while dirty components are updated, as this can\r\n\t// result in an infinite loop. Instead, let the inner flush handle it.\r\n\t// Reentrancy is ok afterwards for bindings etc.\r\n\tif (flushidx !== 0) {\r\n\t\treturn;\r\n\t}\r\n\tconst saved_component = current_component;\r\n\tdo {\r\n\t\t// first, call beforeUpdate functions\r\n\t\t// and update components\r\n\t\ttry {\r\n\t\t\twhile (flushidx < dirty_components.length) {\r\n\t\t\t\tconst component = dirty_components[flushidx];\r\n\t\t\t\tflushidx++;\r\n\t\t\t\tset_current_component(component);\r\n\t\t\t\tupdate(component.$$);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\r\n\t\t\tdirty_components.length = 0;\r\n\t\t\tflushidx = 0;\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tset_current_component(null);\r\n\t\tdirty_components.length = 0;\r\n\t\tflushidx = 0;\r\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\r\n\t\t// then, once components are updated, call\r\n\t\t// afterUpdate functions. This may cause\r\n\t\t// subsequent updates...\r\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\r\n\t\t\tconst callback = render_callbacks[i];\r\n\t\t\tif (!seen_callbacks.has(callback)) {\r\n\t\t\t\t// ...so guard against infinite loops\r\n\t\t\t\tseen_callbacks.add(callback);\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t\trender_callbacks.length = 0;\r\n\t} while (dirty_components.length);\r\n\twhile (flush_callbacks.length) {\r\n\t\tflush_callbacks.pop()();\r\n\t}\r\n\tupdate_scheduled = false;\r\n\tseen_callbacks.clear();\r\n\tset_current_component(saved_component);\r\n}\r\n\r\n/** @returns {void} */\r\nfunction update($$) {\r\n\tif ($$.fragment !== null) {\r\n\t\t$$.update();\r\n\t\trun_all($$.before_update);\r\n\t\tconst dirty = $$.dirty;\r\n\t\t$$.dirty = [-1];\r\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\r\n\t\t$$.after_update.forEach(add_render_callback);\r\n\t}\r\n}\r\n\r\n/**\r\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\r\n * @param {Function[]} fns\r\n * @returns {void}\r\n */\r\nexport function flush_render_callbacks(fns) {\r\n\tconst filtered = [];\r\n\tconst targets = [];\r\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\r\n\ttargets.forEach((c) => c());\r\n\trender_callbacks = filtered;\r\n}\r\n", "import { identity as linear, is_function, noop, run_all } from './utils.js';\r\nimport { now } from './environment.js';\r\nimport { loop } from './loop.js';\r\nimport { create_rule, delete_rule } from './style_manager.js';\r\nimport { custom_event } from './dom.js';\r\nimport { add_render_callback } from './scheduler.js';\r\n\r\n/**\r\n * @type {Promise<void> | null}\r\n */\r\nlet promise;\r\n\r\n/**\r\n * @returns {Promise<void>}\r\n */\r\nfunction wait() {\r\n\tif (!promise) {\r\n\t\tpromise = Promise.resolve();\r\n\t\tpromise.then(() => {\r\n\t\t\tpromise = null;\r\n\t\t});\r\n\t}\r\n\treturn promise;\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @param {INTRO | OUTRO | boolean} direction\r\n * @param {'start' | 'end'} kind\r\n * @returns {void}\r\n */\r\nfunction dispatch(node, direction, kind) {\r\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\r\n}\r\n\r\nconst outroing = new Set();\r\n\r\n/**\r\n * @type {Outro}\r\n */\r\nlet outros;\r\n\r\n/**\r\n * @returns {void} */\r\nexport function group_outros() {\r\n\toutros = {\r\n\t\tr: 0,\r\n\t\tc: [],\r\n\t\tp: outros // parent group\r\n\t};\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function check_outros() {\r\n\tif (!outros.r) {\r\n\t\trun_all(outros.c);\r\n\t}\r\n\toutros = outros.p;\r\n}\r\n\r\n/**\r\n * @param {import('./private.js').Fragment} block\r\n * @param {0 | 1} [local]\r\n * @returns {void}\r\n */\r\nexport function transition_in(block, local) {\r\n\tif (block && block.i) {\r\n\t\toutroing.delete(block);\r\n\t\tblock.i(local);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {import('./private.js').Fragment} block\r\n * @param {0 | 1} local\r\n * @param {0 | 1} [detach]\r\n * @param {() => void} [callback]\r\n * @returns {void}\r\n */\r\nexport function transition_out(block, local, detach, callback) {\r\n\tif (block && block.o) {\r\n\t\tif (outroing.has(block)) return;\r\n\t\toutroing.add(block);\r\n\t\toutros.c.push(() => {\r\n\t\t\toutroing.delete(block);\r\n\t\t\tif (callback) {\r\n\t\t\t\tif (detach) block.d(1);\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t\tblock.o(local);\r\n\t} else if (callback) {\r\n\t\tcallback();\r\n\t}\r\n}\r\n\r\n/**\r\n * @type {import('../transition/public.js').TransitionConfig}\r\n */\r\nconst null_transition = { duration: 0 };\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {TransitionFn} fn\r\n * @param {any} params\r\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\r\n */\r\nexport function create_in_transition(node, fn, params) {\r\n\t/**\r\n\t * @type {TransitionOptions} */\r\n\tconst options = { direction: 'in' };\r\n\tlet config = fn(node, params, options);\r\n\tlet running = false;\r\n\tlet animation_name;\r\n\tlet task;\r\n\tlet uid = 0;\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\tfunction cleanup() {\r\n\t\tif (animation_name) delete_rule(node, animation_name);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\tfunction go() {\r\n\t\tconst {\r\n\t\t\tdelay = 0,\r\n\t\t\tduration = 300,\r\n\t\t\teasing = linear,\r\n\t\t\ttick = noop,\r\n\t\t\tcss\r\n\t\t} = config || null_transition;\r\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\r\n\t\ttick(0, 1);\r\n\t\tconst start_time = now() + delay;\r\n\t\tconst end_time = start_time + duration;\r\n\t\tif (task) task.abort();\r\n\t\trunning = true;\r\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\r\n\t\ttask = loop((now) => {\r\n\t\t\tif (running) {\r\n\t\t\t\tif (now >= end_time) {\r\n\t\t\t\t\ttick(1, 0);\r\n\t\t\t\t\tdispatch(node, true, 'end');\r\n\t\t\t\t\tcleanup();\r\n\t\t\t\t\treturn (running = false);\r\n\t\t\t\t}\r\n\t\t\t\tif (now >= start_time) {\r\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\r\n\t\t\t\t\ttick(t, 1 - t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn running;\r\n\t\t});\r\n\t}\r\n\tlet started = false;\r\n\treturn {\r\n\t\tstart() {\r\n\t\t\tif (started) return;\r\n\t\t\tstarted = true;\r\n\t\t\tdelete_rule(node);\r\n\t\t\tif (is_function(config)) {\r\n\t\t\t\tconfig = config(options);\r\n\t\t\t\twait().then(go);\r\n\t\t\t} else {\r\n\t\t\t\tgo();\r\n\t\t\t}\r\n\t\t},\r\n\t\tinvalidate() {\r\n\t\t\tstarted = false;\r\n\t\t},\r\n\t\tend() {\r\n\t\t\tif (running) {\r\n\t\t\t\tcleanup();\r\n\t\t\t\trunning = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {TransitionFn} fn\r\n * @param {any} params\r\n * @returns {{ end(reset: any): void; }}\r\n */\r\nexport function create_out_transition(node, fn, params) {\r\n\t/** @type {TransitionOptions} */\r\n\tconst options = { direction: 'out' };\r\n\tlet config = fn(node, params, options);\r\n\tlet running = true;\r\n\tlet animation_name;\r\n\tconst group = outros;\r\n\tgroup.r += 1;\r\n\t/** @type {boolean} */\r\n\tlet original_inert_value;\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\tfunction go() {\r\n\t\tconst {\r\n\t\t\tdelay = 0,\r\n\t\t\tduration = 300,\r\n\t\t\teasing = linear,\r\n\t\t\ttick = noop,\r\n\t\t\tcss\r\n\t\t} = config || null_transition;\r\n\r\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\r\n\r\n\t\tconst start_time = now() + delay;\r\n\t\tconst end_time = start_time + duration;\r\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\r\n\r\n\t\tif ('inert' in node) {\r\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\r\n\t\t\tnode.inert = true;\r\n\t\t}\r\n\r\n\t\tloop((now) => {\r\n\t\t\tif (running) {\r\n\t\t\t\tif (now >= end_time) {\r\n\t\t\t\t\ttick(0, 1);\r\n\t\t\t\t\tdispatch(node, false, 'end');\r\n\t\t\t\t\tif (!--group.r) {\r\n\t\t\t\t\t\t// this will result in `end()` being called,\r\n\t\t\t\t\t\t// so we don't need to clean up here\r\n\t\t\t\t\t\trun_all(group.c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (now >= start_time) {\r\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\r\n\t\t\t\t\ttick(1 - t, t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn running;\r\n\t\t});\r\n\t}\r\n\r\n\tif (is_function(config)) {\r\n\t\twait().then(() => {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconfig = config(options);\r\n\t\t\tgo();\r\n\t\t});\r\n\t} else {\r\n\t\tgo();\r\n\t}\r\n\r\n\treturn {\r\n\t\tend(reset) {\r\n\t\t\tif (reset && 'inert' in node) {\r\n\t\t\t\tnode.inert = original_inert_value;\r\n\t\t\t}\r\n\t\t\tif (reset && config.tick) {\r\n\t\t\t\tconfig.tick(1, 0);\r\n\t\t\t}\r\n\t\t\tif (running) {\r\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\r\n\t\t\t\trunning = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {Element & ElementCSSInlineStyle} node\r\n * @param {TransitionFn} fn\r\n * @param {any} params\r\n * @param {boolean} intro\r\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\r\n */\r\nexport function create_bidirectional_transition(node, fn, params, intro) {\r\n\t/**\r\n\t * @type {TransitionOptions} */\r\n\tconst options = { direction: 'both' };\r\n\tlet config = fn(node, params, options);\r\n\tlet t = intro ? 0 : 1;\r\n\r\n\t/**\r\n\t * @type {Program | null} */\r\n\tlet running_program = null;\r\n\r\n\t/**\r\n\t * @type {PendingProgram | null} */\r\n\tlet pending_program = null;\r\n\tlet animation_name = null;\r\n\r\n\t/** @type {boolean} */\r\n\tlet original_inert_value;\r\n\r\n\t/**\r\n\t * @returns {void} */\r\n\tfunction clear_animation() {\r\n\t\tif (animation_name) delete_rule(node, animation_name);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PendingProgram} program\r\n\t * @param {number} duration\r\n\t * @returns {Program}\r\n\t */\r\n\tfunction init(program, duration) {\r\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\r\n\t\tduration *= Math.abs(d);\r\n\t\treturn {\r\n\t\t\ta: t,\r\n\t\t\tb: program.b,\r\n\t\t\td,\r\n\t\t\tduration,\r\n\t\t\tstart: program.start,\r\n\t\t\tend: program.start + duration,\r\n\t\t\tgroup: program.group\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {INTRO | OUTRO} b\r\n\t * @returns {void}\r\n\t */\r\n\tfunction go(b) {\r\n\t\tconst {\r\n\t\t\tdelay = 0,\r\n\t\t\tduration = 300,\r\n\t\t\teasing = linear,\r\n\t\t\ttick = noop,\r\n\t\t\tcss\r\n\t\t} = config || null_transition;\r\n\r\n\t\t/**\r\n\t\t * @type {PendingProgram} */\r\n\t\tconst program = {\r\n\t\t\tstart: now() + delay,\r\n\t\t\tb\r\n\t\t};\r\n\r\n\t\tif (!b) {\r\n\t\t\t// @ts-ignore todo: improve typings\r\n\t\t\tprogram.group = outros;\r\n\t\t\toutros.r += 1;\r\n\t\t}\r\n\r\n\t\tif ('inert' in node) {\r\n\t\t\tif (b) {\r\n\t\t\t\tif (original_inert_value !== undefined) {\r\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\r\n\t\t\t\t\tnode.inert = original_inert_value;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\r\n\t\t\t\tnode.inert = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (running_program || pending_program) {\r\n\t\t\tpending_program = program;\r\n\t\t} else {\r\n\t\t\t// if this is an intro, and there's a delay, we need to do\r\n\t\t\t// an initial tick and/or apply CSS animation immediately\r\n\t\t\tif (css) {\r\n\t\t\t\tclear_animation();\r\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\r\n\t\t\t}\r\n\t\t\tif (b) tick(0, 1);\r\n\t\t\trunning_program = init(program, duration);\r\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\r\n\t\t\tloop((now) => {\r\n\t\t\t\tif (pending_program && now > pending_program.start) {\r\n\t\t\t\t\trunning_program = init(pending_program, duration);\r\n\t\t\t\t\tpending_program = null;\r\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\r\n\t\t\t\t\tif (css) {\r\n\t\t\t\t\t\tclear_animation();\r\n\t\t\t\t\t\tanimation_name = create_rule(\r\n\t\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\t\tt,\r\n\t\t\t\t\t\t\trunning_program.b,\r\n\t\t\t\t\t\t\trunning_program.duration,\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\teasing,\r\n\t\t\t\t\t\t\tconfig.css\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (running_program) {\r\n\t\t\t\t\tif (now >= running_program.end) {\r\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\r\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\r\n\t\t\t\t\t\tif (!pending_program) {\r\n\t\t\t\t\t\t\t// we're done\r\n\t\t\t\t\t\t\tif (running_program.b) {\r\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\r\n\t\t\t\t\t\t\t\tclear_animation();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\r\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trunning_program = null;\r\n\t\t\t\t\t} else if (now >= running_program.start) {\r\n\t\t\t\t\t\tconst p = now - running_program.start;\r\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\r\n\t\t\t\t\t\ttick(t, 1 - t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn !!(running_program || pending_program);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\trun(b) {\r\n\t\t\tif (is_function(config)) {\r\n\t\t\t\twait().then(() => {\r\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tconfig = config(opts);\r\n\t\t\t\t\tgo(b);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tgo(b);\r\n\t\t\t}\r\n\t\t},\r\n\t\tend() {\r\n\t\t\tclear_animation();\r\n\t\t\trunning_program = pending_program = null;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/** @typedef {1} INTRO */\r\n/** @typedef {0} OUTRO */\r\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\r\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\r\n\r\n/**\r\n * @typedef {Object} Outro\r\n * @property {number} r\r\n * @property {Function[]} c\r\n * @property {Object} p\r\n */\r\n\r\n/**\r\n * @typedef {Object} PendingProgram\r\n * @property {number} start\r\n * @property {INTRO|OUTRO} b\r\n * @property {Outro} [group]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Program\r\n * @property {number} a\r\n * @property {INTRO|OUTRO} b\r\n * @property {1|-1} d\r\n * @property {number} duration\r\n * @property {number} start\r\n * @property {number} end\r\n * @property {Outro} [group]\r\n */\r\n", "import { is_promise } from './utils.js';\r\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\r\nimport { flush } from './scheduler.js';\r\nimport { get_current_component, set_current_component } from './lifecycle.js';\r\n\r\n/**\r\n * @template T\r\n * @param {Promise<T>} promise\r\n * @param {import('./private.js').PromiseInfo<T>} info\r\n * @returns {boolean}\r\n */\r\nexport function handle_promise(promise, info) {\r\n\tconst token = (info.token = {});\r\n\t/**\r\n\t * @param {import('./private.js').FragmentFactory} type\r\n\t * @param {0 | 1 | 2} index\r\n\t * @param {number} [key]\r\n\t * @param {any} [value]\r\n\t * @returns {void}\r\n\t */\r\n\tfunction update(type, index, key, value) {\r\n\t\tif (info.token !== token) return;\r\n\t\tinfo.resolved = value;\r\n\t\tlet child_ctx = info.ctx;\r\n\t\tif (key !== undefined) {\r\n\t\t\tchild_ctx = child_ctx.slice();\r\n\t\t\tchild_ctx[key] = value;\r\n\t\t}\r\n\t\tconst block = type && (info.current = type)(child_ctx);\r\n\t\tlet needs_flush = false;\r\n\t\tif (info.block) {\r\n\t\t\tif (info.blocks) {\r\n\t\t\t\tinfo.blocks.forEach((block, i) => {\r\n\t\t\t\t\tif (i !== index && block) {\r\n\t\t\t\t\t\tgroup_outros();\r\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\r\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\r\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tcheck_outros();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tinfo.block.d(1);\r\n\t\t\t}\r\n\t\t\tblock.c();\r\n\t\t\ttransition_in(block, 1);\r\n\t\t\tblock.m(info.mount(), info.anchor);\r\n\t\t\tneeds_flush = true;\r\n\t\t}\r\n\t\tinfo.block = block;\r\n\t\tif (info.blocks) info.blocks[index] = block;\r\n\t\tif (needs_flush) {\r\n\t\t\tflush();\r\n\t\t}\r\n\t}\r\n\tif (is_promise(promise)) {\r\n\t\tconst current_component = get_current_component();\r\n\t\tpromise.then(\r\n\t\t\t(value) => {\r\n\t\t\t\tset_current_component(current_component);\r\n\t\t\t\tupdate(info.then, 1, info.value, value);\r\n\t\t\t\tset_current_component(null);\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tset_current_component(current_component);\r\n\t\t\t\tupdate(info.catch, 2, info.error, error);\r\n\t\t\t\tset_current_component(null);\r\n\t\t\t\tif (!info.hasCatch) {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// if we previously had a then/catch block, destroy it\r\n\t\tif (info.current !== info.pending) {\r\n\t\t\tupdate(info.pending, 0);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t} else {\r\n\t\tif (info.current !== info.then) {\r\n\t\t\tupdate(info.then, 1, info.value, promise);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tinfo.resolved = /** @type {T} */ (promise);\r\n\t}\r\n}\r\n\r\n/** @returns {void} */\r\nexport function update_await_block_branch(info, ctx, dirty) {\r\n\tconst child_ctx = ctx.slice();\r\n\tconst { resolved } = info;\r\n\tif (info.current === info.then) {\r\n\t\tchild_ctx[info.value] = resolved;\r\n\t}\r\n\tif (info.current === info.catch) {\r\n\t\tchild_ctx[info.error] = resolved;\r\n\t}\r\n\tinfo.block.p(child_ctx, dirty);\r\n}\r\n", "import { transition_in, transition_out } from './transitions.js';\r\nimport { run_all } from './utils.js';\r\n\r\n// general each functions:\r\n\r\nexport function ensure_array_like(array_like_or_iterator) {\r\n\treturn array_like_or_iterator?.length !== undefined\r\n\t\t? array_like_or_iterator\r\n\t\t: Array.from(array_like_or_iterator);\r\n}\r\n\r\n// keyed each functions:\r\n\r\n/** @returns {void} */\r\nexport function destroy_block(block, lookup) {\r\n\tblock.d(1);\r\n\tlookup.delete(block.key);\r\n}\r\n\r\n/** @returns {void} */\r\nexport function outro_and_destroy_block(block, lookup) {\r\n\ttransition_out(block, 1, 1, () => {\r\n\t\tlookup.delete(block.key);\r\n\t});\r\n}\r\n\r\n/** @returns {void} */\r\nexport function fix_and_destroy_block(block, lookup) {\r\n\tblock.f();\r\n\tdestroy_block(block, lookup);\r\n}\r\n\r\n/** @returns {void} */\r\nexport function fix_and_outro_and_destroy_block(block, lookup) {\r\n\tblock.f();\r\n\toutro_and_destroy_block(block, lookup);\r\n}\r\n\r\n/** @returns {any[]} */\r\nexport function update_keyed_each(\r\n\told_blocks,\r\n\tdirty,\r\n\tget_key,\r\n\tdynamic,\r\n\tctx,\r\n\tlist,\r\n\tlookup,\r\n\tnode,\r\n\tdestroy,\r\n\tcreate_each_block,\r\n\tnext,\r\n\tget_context\r\n) {\r\n\tlet o = old_blocks.length;\r\n\tlet n = list.length;\r\n\tlet i = o;\r\n\tconst old_indexes = {};\r\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\r\n\tconst new_blocks = [];\r\n\tconst new_lookup = new Map();\r\n\tconst deltas = new Map();\r\n\tconst updates = [];\r\n\ti = n;\r\n\twhile (i--) {\r\n\t\tconst child_ctx = get_context(ctx, list, i);\r\n\t\tconst key = get_key(child_ctx);\r\n\t\tlet block = lookup.get(key);\r\n\t\tif (!block) {\r\n\t\t\tblock = create_each_block(key, child_ctx);\r\n\t\t\tblock.c();\r\n\t\t} else if (dynamic) {\r\n\t\t\t// defer updates until all the DOM shuffling is done\r\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\r\n\t\t}\r\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\r\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\r\n\t}\r\n\tconst will_move = new Set();\r\n\tconst did_move = new Set();\r\n\t/** @returns {void} */\r\n\tfunction insert(block) {\r\n\t\ttransition_in(block, 1);\r\n\t\tblock.m(node, next);\r\n\t\tlookup.set(block.key, block);\r\n\t\tnext = block.first;\r\n\t\tn--;\r\n\t}\r\n\twhile (o && n) {\r\n\t\tconst new_block = new_blocks[n - 1];\r\n\t\tconst old_block = old_blocks[o - 1];\r\n\t\tconst new_key = new_block.key;\r\n\t\tconst old_key = old_block.key;\r\n\t\tif (new_block === old_block) {\r\n\t\t\t// do nothing\r\n\t\t\tnext = new_block.first;\r\n\t\t\to--;\r\n\t\t\tn--;\r\n\t\t} else if (!new_lookup.has(old_key)) {\r\n\t\t\t// remove old block\r\n\t\t\tdestroy(old_block, lookup);\r\n\t\t\to--;\r\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\r\n\t\t\tinsert(new_block);\r\n\t\t} else if (did_move.has(old_key)) {\r\n\t\t\to--;\r\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\r\n\t\t\tdid_move.add(new_key);\r\n\t\t\tinsert(new_block);\r\n\t\t} else {\r\n\t\t\twill_move.add(old_key);\r\n\t\t\to--;\r\n\t\t}\r\n\t}\r\n\twhile (o--) {\r\n\t\tconst old_block = old_blocks[o];\r\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\r\n\t}\r\n\twhile (n) insert(new_blocks[n - 1]);\r\n\trun_all(updates);\r\n\treturn new_blocks;\r\n}\r\n\r\n/** @returns {void} */\r\nexport function validate_each_keys(ctx, list, get_context, get_key) {\r\n\tconst keys = new Map();\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst key = get_key(get_context(ctx, list, i));\r\n\t\tif (keys.has(key)) {\r\n\t\t\tlet value = '';\r\n\t\t\ttry {\r\n\t\t\t\tvalue = `with value '${String(key)}' `;\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// can't stringify\r\n\t\t\t}\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\r\n\t\t\t\t\tkey\r\n\t\t\t\t)} and ${i} ${value}are duplicates`\r\n\t\t\t);\r\n\t\t}\r\n\t\tkeys.set(key, i);\r\n\t}\r\n}\r\n", "/** @returns {{}} */\r\nexport function get_spread_update(levels, updates) {\r\n\tconst update = {};\r\n\tconst to_null_out = {};\r\n\tconst accounted_for = { $$scope: 1 };\r\n\tlet i = levels.length;\r\n\twhile (i--) {\r\n\t\tconst o = levels[i];\r\n\t\tconst n = updates[i];\r\n\t\tif (n) {\r\n\t\t\tfor (const key in o) {\r\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\r\n\t\t\t}\r\n\t\t\tfor (const key in n) {\r\n\t\t\t\tif (!accounted_for[key]) {\r\n\t\t\t\t\tupdate[key] = n[key];\r\n\t\t\t\t\taccounted_for[key] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlevels[i] = n;\r\n\t\t} else {\r\n\t\t\tfor (const key in o) {\r\n\t\t\t\taccounted_for[key] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (const key in to_null_out) {\r\n\t\tif (!(key in update)) update[key] = undefined;\r\n\t}\r\n\treturn update;\r\n}\r\n\r\nexport function get_spread_object(spread_props) {\r\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\r\n}\r\n", "const _boolean_attributes = /** @type {const} */ ([\r\n\t'allowfullscreen',\r\n\t'allowpaymentrequest',\r\n\t'async',\r\n\t'autofocus',\r\n\t'autoplay',\r\n\t'checked',\r\n\t'controls',\r\n\t'default',\r\n\t'defer',\r\n\t'disabled',\r\n\t'formnovalidate',\r\n\t'hidden',\r\n\t'inert',\r\n\t'ismap',\r\n\t'loop',\r\n\t'multiple',\r\n\t'muted',\r\n\t'nomodule',\r\n\t'novalidate',\r\n\t'open',\r\n\t'playsinline',\r\n\t'readonly',\r\n\t'required',\r\n\t'reversed',\r\n\t'selected'\r\n]);\r\n\r\n/**\r\n * List of HTML boolean attributes (e.g. `<input disabled>`).\r\n * Source: https://html.spec.whatwg.org/multipage/indices.html\r\n *\r\n * @type {Set<string>}\r\n */\r\nexport const boolean_attributes = new Set([..._boolean_attributes]);\r\n\r\n/** @typedef {typeof _boolean_attributes[number]} BooleanAttributes */\r\n", "/** regex of all html void element names */\r\nconst void_element_names =\r\n\t/^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\r\n\r\n/** regex of all html element names. svg and math are omitted because they belong to the svg elements namespace */\r\nconst html_element_names =\r\n\t/^(?:a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr)$/;\r\n\r\n/** regex of all svg element names */\r\nconst svg =\r\n\t/^(?:altGlyph|altGlyphDef|altGlyphItem|animate|animateColor|animateMotion|animateTransform|circle|clipPath|color-profile|cursor|defs|desc|discard|ellipse|feBlend|feColorMatrix|feComponentTransfer|feComposite|feConvolveMatrix|feDiffuseLighting|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feImage|feMerge|feMergeNode|feMorphology|feOffset|fePointLight|feSpecularLighting|feSpotLight|feTile|feTurbulence|filter|font|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|foreignObject|g|glyph|glyphRef|hatch|hatchpath|hkern|image|line|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|metadata|missing-glyph|mpath|path|pattern|polygon|polyline|radialGradient|rect|set|solidcolor|stop|svg|switch|symbol|text|textPath|tref|tspan|unknown|use|view|vkern)$/;\r\n\r\n/**\r\n * @param {string} name\r\n * @returns {boolean}\r\n */\r\nexport function is_void(name) {\r\n\treturn void_element_names.test(name) || name.toLowerCase() === '!doctype';\r\n}\r\n\r\n/**\r\n * @param {string} name\r\n * @returns {boolean}\r\n */\r\nexport function is_html(name) {\r\n\treturn html_element_names.test(name);\r\n}\r\n\r\n/**\r\n * @param {string} name\r\n * @returns {boolean}\r\n */\r\nexport function is_svg(name) {\r\n\treturn svg.test(name);\r\n}\r\n", "import { set_current_component, current_component } from './lifecycle.js';\r\nimport { run_all, blank_object } from './utils.js';\r\nimport { boolean_attributes } from '../../shared/boolean_attributes.js';\r\nimport { ensure_array_like } from './each.js';\r\nexport { is_void } from '../../shared/utils/names.js';\r\n\r\nexport const invalid_attribute_name_character =\r\n\t/[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\r\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\r\n// https://infra.spec.whatwg.org/#noncharacter\r\n\r\n/** @returns {string} */\r\nexport function spread(args, attrs_to_add) {\r\n\tconst attributes = Object.assign({}, ...args);\r\n\tif (attrs_to_add) {\r\n\t\tconst classes_to_add = attrs_to_add.classes;\r\n\t\tconst styles_to_add = attrs_to_add.styles;\r\n\t\tif (classes_to_add) {\r\n\t\t\tif (attributes.class == null) {\r\n\t\t\t\tattributes.class = classes_to_add;\r\n\t\t\t} else {\r\n\t\t\t\tattributes.class += ' ' + classes_to_add;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (styles_to_add) {\r\n\t\t\tif (attributes.style == null) {\r\n\t\t\t\tattributes.style = style_object_to_string(styles_to_add);\r\n\t\t\t} else {\r\n\t\t\t\tattributes.style = style_object_to_string(\r\n\t\t\t\t\tmerge_ssr_styles(attributes.style, styles_to_add)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlet str = '';\r\n\tObject.keys(attributes).forEach((name) => {\r\n\t\tif (invalid_attribute_name_character.test(name)) return;\r\n\t\tconst value = attributes[name];\r\n\t\tif (value === true) str += ' ' + name;\r\n\t\telse if (boolean_attributes.has(name.toLowerCase())) {\r\n\t\t\tif (value) str += ' ' + name;\r\n\t\t} else if (value != null) {\r\n\t\t\tstr += ` ${name}=\"${value}\"`;\r\n\t\t}\r\n\t});\r\n\treturn str;\r\n}\r\n\r\n/** @returns {{}} */\r\nexport function merge_ssr_styles(style_attribute, style_directive) {\r\n\tconst style_object = {};\r\n\tfor (const individual_style of style_attribute.split(';')) {\r\n\t\tconst colon_index = individual_style.indexOf(':');\r\n\t\tconst name = individual_style.slice(0, colon_index).trim();\r\n\t\tconst value = individual_style.slice(colon_index + 1).trim();\r\n\t\tif (!name) continue;\r\n\t\tstyle_object[name] = value;\r\n\t}\r\n\tfor (const name in style_directive) {\r\n\t\tconst value = style_directive[name];\r\n\t\tif (value) {\r\n\t\t\tstyle_object[name] = value;\r\n\t\t} else {\r\n\t\t\tdelete style_object[name];\r\n\t\t}\r\n\t}\r\n\treturn style_object;\r\n}\r\n\r\nconst ATTR_REGEX = /[&\"]/g;\r\nconst CONTENT_REGEX = /[&<]/g;\r\n\r\n/**\r\n * Note: this method is performance sensitive and has been optimized\r\n * https://github.com/sveltejs/svelte/pull/5701\r\n * @param {unknown} value\r\n * @returns {string}\r\n */\r\nexport function escape(value, is_attr = false) {\r\n\tconst str = String(value);\r\n\tconst pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\r\n\tpattern.lastIndex = 0;\r\n\tlet escaped = '';\r\n\tlet last = 0;\r\n\twhile (pattern.test(str)) {\r\n\t\tconst i = pattern.lastIndex - 1;\r\n\t\tconst ch = str[i];\r\n\t\tescaped += str.substring(last, i) + (ch === '&' ? '&amp;' : ch === '\"' ? '&quot;' : '&lt;');\r\n\t\tlast = i + 1;\r\n\t}\r\n\treturn escaped + str.substring(last);\r\n}\r\n\r\nexport function escape_attribute_value(value) {\r\n\t// keep booleans, null, and undefined for the sake of `spread`\r\n\tconst should_escape = typeof value === 'string' || (value && typeof value === 'object');\r\n\treturn should_escape ? escape(value, true) : value;\r\n}\r\n\r\n/** @returns {{}} */\r\nexport function escape_object(obj) {\r\n\tconst result = {};\r\n\tfor (const key in obj) {\r\n\t\tresult[key] = escape_attribute_value(obj[key]);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/** @returns {string} */\r\nexport function each(items, fn) {\r\n\titems = ensure_array_like(items);\r\n\tlet str = '';\r\n\tfor (let i = 0; i < items.length; i += 1) {\r\n\t\tstr += fn(items[i], i);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nexport const missing_component = {\r\n\t$$render: () => ''\r\n};\r\n\r\nexport function validate_component(component, name) {\r\n\tif (!component || !component.$$render) {\r\n\t\tif (name === 'svelte:component') name += ' this={...}';\r\n\t\tthrow new Error(\r\n\t\t\t`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`\r\n\t\t);\r\n\t}\r\n\treturn component;\r\n}\r\n\r\n/** @returns {string} */\r\nexport function debug(file, line, column, values) {\r\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\r\n\tconsole.log(values); // eslint-disable-line no-console\r\n\treturn '';\r\n}\r\n\r\nlet on_destroy;\r\n\r\n/** @returns {{ render: (props?: {}, { $$slots, context }?: { $$slots?: {}; context?: Map<any, any>; }) => { html: any; css: { code: string; map: any; }; head: string; }; $$render: (result: any, props: any, bindings: any, slots: any, context: any) => any; }} */\r\nexport function create_ssr_component(fn) {\r\n\tfunction $$render(result, props, bindings, slots, context) {\r\n\t\tconst parent_component = current_component;\r\n\t\tconst $$ = {\r\n\t\t\ton_destroy,\r\n\t\t\tcontext: new Map(context || (parent_component ? parent_component.$$.context : [])),\r\n\t\t\t// these will be immediately discarded\r\n\t\t\ton_mount: [],\r\n\t\t\tbefore_update: [],\r\n\t\t\tafter_update: [],\r\n\t\t\tcallbacks: blank_object()\r\n\t\t};\r\n\t\tset_current_component({ $$ });\r\n\t\tconst html = fn(result, props, bindings, slots);\r\n\t\tset_current_component(parent_component);\r\n\t\treturn html;\r\n\t}\r\n\treturn {\r\n\t\trender: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\r\n\t\t\ton_destroy = [];\r\n\t\t\tconst result = { title: '', head: '', css: new Set() };\r\n\t\t\tconst html = $$render(result, props, {}, $$slots, context);\r\n\t\t\trun_all(on_destroy);\r\n\t\t\treturn {\r\n\t\t\t\thtml,\r\n\t\t\t\tcss: {\r\n\t\t\t\t\tcode: Array.from(result.css)\r\n\t\t\t\t\t\t.map((css) => css.code)\r\n\t\t\t\t\t\t.join('\\n'),\r\n\t\t\t\t\tmap: null // TODO\r\n\t\t\t\t},\r\n\t\t\t\thead: result.title + result.head\r\n\t\t\t};\r\n\t\t},\r\n\t\t$$render\r\n\t};\r\n}\r\n\r\n/** @returns {string} */\r\nexport function add_attribute(name, value, boolean) {\r\n\tif (value == null || (boolean && !value)) return '';\r\n\tconst assignment = boolean && value === true ? '' : `=\"${escape(value, true)}\"`;\r\n\treturn ` ${name}${assignment}`;\r\n}\r\n\r\n/** @returns {string} */\r\nexport function add_classes(classes) {\r\n\treturn classes ? ` class=\"${classes}\"` : '';\r\n}\r\n\r\n/** @returns {string} */\r\nfunction style_object_to_string(style_object) {\r\n\treturn Object.keys(style_object)\r\n\t\t.filter((key) => style_object[key])\r\n\t\t.map((key) => `${key}: ${escape_attribute_value(style_object[key])};`)\r\n\t\t.join(' ');\r\n}\r\n\r\n/** @returns {string} */\r\nexport function add_styles(style_object) {\r\n\tconst styles = style_object_to_string(style_object);\r\n\treturn styles ? ` style=\"${styles}\"` : '';\r\n}\r\n", "import {\r\n\tadd_render_callback,\r\n\tflush,\r\n\tflush_render_callbacks,\r\n\tschedule_update,\r\n\tdirty_components\r\n} from './scheduler.js';\r\nimport { current_component, set_current_component } from './lifecycle.js';\r\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\r\nimport {\r\n\tchildren,\r\n\tdetach,\r\n\tstart_hydrating,\r\n\tend_hydrating,\r\n\tget_custom_elements_slots,\r\n\tinsert,\r\n\telement,\r\n\tattr\r\n} from './dom.js';\r\nimport { transition_in } from './transitions.js';\r\n\r\n/** @returns {void} */\r\nexport function bind(component, name, callback) {\r\n\tconst index = component.$$.props[name];\r\n\tif (index !== undefined) {\r\n\t\tcomponent.$$.bound[index] = callback;\r\n\t\tcallback(component.$$.ctx[index]);\r\n\t}\r\n}\r\n\r\n/** @returns {void} */\r\nexport function create_component(block) {\r\n\tblock && block.c();\r\n}\r\n\r\n/** @returns {void} */\r\nexport function claim_component(block, parent_nodes) {\r\n\tblock && block.l(parent_nodes);\r\n}\r\n\r\n/** @returns {void} */\r\nexport function mount_component(component, target, anchor) {\r\n\tconst { fragment, after_update } = component.$$;\r\n\tfragment && fragment.m(target, anchor);\r\n\t// onMount happens before the initial afterUpdate\r\n\tadd_render_callback(() => {\r\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\r\n\t\t// if the component was destroyed immediately\r\n\t\t// it will update the `$$.on_destroy` reference to `null`.\r\n\t\t// the destructured on_destroy may still reference to the old array\r\n\t\tif (component.$$.on_destroy) {\r\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\r\n\t\t} else {\r\n\t\t\t// Edge case - component was destroyed immediately,\r\n\t\t\t// most likely as a result of a binding initialising\r\n\t\t\trun_all(new_on_destroy);\r\n\t\t}\r\n\t\tcomponent.$$.on_mount = [];\r\n\t});\r\n\tafter_update.forEach(add_render_callback);\r\n}\r\n\r\n/** @returns {void} */\r\nexport function destroy_component(component, detaching) {\r\n\tconst $$ = component.$$;\r\n\tif ($$.fragment !== null) {\r\n\t\tflush_render_callbacks($$.after_update);\r\n\t\trun_all($$.on_destroy);\r\n\t\t$$.fragment && $$.fragment.d(detaching);\r\n\t\t// TODO null out other refs, including component.$$ (but need to\r\n\t\t// preserve final state?)\r\n\t\t$$.on_destroy = $$.fragment = null;\r\n\t\t$$.ctx = [];\r\n\t}\r\n}\r\n\r\n/** @returns {void} */\r\nfunction make_dirty(component, i) {\r\n\tif (component.$$.dirty[0] === -1) {\r\n\t\tdirty_components.push(component);\r\n\t\tschedule_update();\r\n\t\tcomponent.$$.dirty.fill(0);\r\n\t}\r\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\r\n}\r\n\r\n// TODO: Document the other params\r\n/**\r\n * @param {SvelteComponent} component\r\n * @param {import('./public.js').ComponentConstructorOptions} options\r\n *\r\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\r\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\r\n * This will be the `add_css` function from the compiled component.\r\n *\r\n * @returns {void}\r\n */\r\nexport function init(\r\n\tcomponent,\r\n\toptions,\r\n\tinstance,\r\n\tcreate_fragment,\r\n\tnot_equal,\r\n\tprops,\r\n\tappend_styles = null,\r\n\tdirty = [-1]\r\n) {\r\n\tconst parent_component = current_component;\r\n\tset_current_component(component);\r\n\t/** @type {import('./private.js').T$$} */\r\n\tconst $$ = (component.$$ = {\r\n\t\tfragment: null,\r\n\t\tctx: [],\r\n\t\t// state\r\n\t\tprops,\r\n\t\tupdate: noop,\r\n\t\tnot_equal,\r\n\t\tbound: blank_object(),\r\n\t\t// lifecycle\r\n\t\ton_mount: [],\r\n\t\ton_destroy: [],\r\n\t\ton_disconnect: [],\r\n\t\tbefore_update: [],\r\n\t\tafter_update: [],\r\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\r\n\t\t// everything else\r\n\t\tcallbacks: blank_object(),\r\n\t\tdirty,\r\n\t\tskip_bound: false,\r\n\t\troot: options.target || parent_component.$$.root\r\n\t});\r\n\tappend_styles && append_styles($$.root);\r\n\tlet ready = false;\r\n\t$$.ctx = instance\r\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\r\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\r\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\r\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\r\n\t\t\t\t\tif (ready) make_dirty(component, i);\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t  })\r\n\t\t: [];\r\n\t$$.update();\r\n\tready = true;\r\n\trun_all($$.before_update);\r\n\t// `false` as a special case of no DOM component\r\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\r\n\tif (options.target) {\r\n\t\tif (options.hydrate) {\r\n\t\t\tstart_hydrating();\r\n\t\t\t// TODO: what is the correct type here?\r\n\t\t\t// @ts-expect-error\r\n\t\t\tconst nodes = children(options.target);\r\n\t\t\t$$.fragment && $$.fragment.l(nodes);\r\n\t\t\tnodes.forEach(detach);\r\n\t\t} else {\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t$$.fragment && $$.fragment.c();\r\n\t\t}\r\n\t\tif (options.intro) transition_in(component.$$.fragment);\r\n\t\tmount_component(component, options.target, options.anchor);\r\n\t\tend_hydrating();\r\n\t\tflush();\r\n\t}\r\n\tset_current_component(parent_component);\r\n}\r\n\r\nexport let SvelteElement;\r\n\r\nif (typeof HTMLElement === 'function') {\r\n\tSvelteElement = class extends HTMLElement {\r\n\t\t/** The Svelte component constructor */\r\n\t\t$$ctor;\r\n\t\t/** Slots */\r\n\t\t$$s;\r\n\t\t/** The Svelte component instance */\r\n\t\t$$c;\r\n\t\t/** Whether or not the custom element is connected */\r\n\t\t$$cn = false;\r\n\t\t/** Component props data */\r\n\t\t$$d = {};\r\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\r\n\t\t$$r = false;\r\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\r\n\t\t$$p_d = {};\r\n\t\t/** @type {Record<string, Function[]>} Event listeners */\r\n\t\t$$l = {};\r\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\r\n\t\t$$l_u = new Map();\r\n\r\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\r\n\t\t\tsuper();\r\n\t\t\tthis.$$ctor = $$componentCtor;\r\n\t\t\tthis.$$s = $$slots;\r\n\t\t\tif (use_shadow_dom) {\r\n\t\t\t\tthis.attachShadow({ mode: 'open' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\taddEventListener(type, listener, options) {\r\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\r\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\r\n\t\t\t// browser event, this fires twice - we can't avoid that.\r\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\r\n\t\t\tthis.$$l[type].push(listener);\r\n\t\t\tif (this.$$c) {\r\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\r\n\t\t\t\tthis.$$l_u.set(listener, unsub);\r\n\t\t\t}\r\n\t\t\tsuper.addEventListener(type, listener, options);\r\n\t\t}\r\n\r\n\t\tremoveEventListener(type, listener, options) {\r\n\t\t\tsuper.removeEventListener(type, listener, options);\r\n\t\t\tif (this.$$c) {\r\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\r\n\t\t\t\tif (unsub) {\r\n\t\t\t\t\tunsub();\r\n\t\t\t\t\tthis.$$l_u.delete(listener);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tasync connectedCallback() {\r\n\t\t\tthis.$$cn = true;\r\n\t\t\tif (!this.$$c) {\r\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\r\n\t\t\t\tawait Promise.resolve();\r\n\t\t\t\tif (!this.$$cn || this.$$c) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfunction create_slot(name) {\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\tlet node;\r\n\t\t\t\t\t\tconst obj = {\r\n\t\t\t\t\t\t\tc: function create() {\r\n\t\t\t\t\t\t\t\tnode = element('slot');\r\n\t\t\t\t\t\t\t\tif (name !== 'default') {\r\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {HTMLElement} target\r\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\r\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\td: function destroy(detaching) {\r\n\t\t\t\t\t\t\t\tif (detaching) {\r\n\t\t\t\t\t\t\t\t\tdetach(node);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn obj;\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tconst $$slots = {};\r\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\r\n\t\t\t\tfor (const name of this.$$s) {\r\n\t\t\t\t\tif (name in existing_slots) {\r\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const attribute of this.attributes) {\r\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\r\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\r\n\t\t\t\t\tif (!(name in this.$$d)) {\r\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\r\n\t\t\t\tfor (const key in this.$$p_d) {\r\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\r\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\r\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.$$c = new this.$$ctor({\r\n\t\t\t\t\ttarget: this.shadowRoot || this,\r\n\t\t\t\t\tprops: {\r\n\t\t\t\t\t\t...this.$$d,\r\n\t\t\t\t\t\t$$slots,\r\n\t\t\t\t\t\t$$scope: {\r\n\t\t\t\t\t\t\tctx: []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Reflect component props as attributes\r\n\t\t\t\tconst reflect_attributes = () => {\r\n\t\t\t\t\tthis.$$r = true;\r\n\t\t\t\t\tfor (const key in this.$$p_d) {\r\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\r\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\r\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\r\n\t\t\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\t\t\tthis.$$d[key],\r\n\t\t\t\t\t\t\t\tthis.$$p_d,\r\n\t\t\t\t\t\t\t\t'toAttribute'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (attribute_value == null) {\r\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$r = false;\r\n\t\t\t\t};\r\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\r\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\r\n\r\n\t\t\t\tfor (const type in this.$$l) {\r\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\r\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\r\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.$$l = {};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\r\n\t\t// and setting attributes through setAttribute etc, this is helpful\r\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\r\n\t\t\tif (this.$$r) return;\r\n\t\t\tattr = this.$$g_p(attr);\r\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\r\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\r\n\t\t}\r\n\r\n\t\tdisconnectedCallback() {\r\n\t\t\tthis.$$cn = false;\r\n\t\t\t// In a microtask, because this could be a move within the DOM\r\n\t\t\tPromise.resolve().then(() => {\r\n\t\t\t\tif (!this.$$cn) {\r\n\t\t\t\t\tthis.$$c.$destroy();\r\n\t\t\t\t\tthis.$$c = undefined;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t$$g_p(attribute_name) {\r\n\t\t\treturn (\r\n\t\t\t\tObject.keys(this.$$p_d).find(\r\n\t\t\t\t\t(key) =>\r\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\r\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\r\n\t\t\t\t) || attribute_name\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {string} prop\r\n * @param {any} value\r\n * @param {Record<string, CustomElementPropDefinition>} props_definition\r\n * @param {'toAttribute' | 'toProp'} [transform]\r\n */\r\nfunction get_custom_element_value(prop, value, props_definition, transform) {\r\n\tconst type = props_definition[prop]?.type;\r\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\r\n\tif (!transform || !props_definition[prop]) {\r\n\t\treturn value;\r\n\t} else if (transform === 'toAttribute') {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'Object':\r\n\t\t\tcase 'Array':\r\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\r\n\t\t\tcase 'Boolean':\r\n\t\t\t\treturn value ? '' : null;\r\n\t\t\tcase 'Number':\r\n\t\t\t\treturn value == null ? null : value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn value;\r\n\t\t}\r\n\t} else {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'Object':\r\n\t\t\tcase 'Array':\r\n\t\t\t\treturn value && JSON.parse(value);\r\n\t\t\tcase 'Boolean':\r\n\t\t\t\treturn value; // conversion already handled above\r\n\t\t\tcase 'Number':\r\n\t\t\t\treturn value != null ? +value : value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @internal\r\n *\r\n * Turn a Svelte component into a custom element.\r\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\r\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\r\n * @param {string[]} slots  The slots to create\r\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\r\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\r\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\r\n */\r\nexport function create_custom_element(\r\n\tComponent,\r\n\tprops_definition,\r\n\tslots,\r\n\taccessors,\r\n\tuse_shadow_dom,\r\n\textend\r\n) {\r\n\tlet Class = class extends SvelteElement {\r\n\t\tconstructor() {\r\n\t\t\tsuper(Component, slots, use_shadow_dom);\r\n\t\t\tthis.$$p_d = props_definition;\r\n\t\t}\r\n\t\tstatic get observedAttributes() {\r\n\t\t\treturn Object.keys(props_definition).map((key) =>\r\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\tObject.keys(props_definition).forEach((prop) => {\r\n\t\tObject.defineProperty(Class.prototype, prop, {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\r\n\t\t\t},\r\n\t\t\tset(value) {\r\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\r\n\t\t\t\tthis.$$d[prop] = value;\r\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\taccessors.forEach((accessor) => {\r\n\t\tObject.defineProperty(Class.prototype, accessor, {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.$$c?.[accessor];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tif (extend) {\r\n\t\t// @ts-expect-error - assigning here is fine\r\n\t\tClass = extend(Class);\r\n\t}\r\n\tComponent.element = /** @type {any} */ (Class);\r\n\treturn Class;\r\n}\r\n\r\n/**\r\n * Base class for Svelte components. Used when dev=false.\r\n *\r\n * @template {Record<string, any>} [Props=any]\r\n * @template {Record<string, any>} [Events=any]\r\n */\r\nexport class SvelteComponent {\r\n\t/**\r\n\t * ### PRIVATE API\r\n\t *\r\n\t * Do not use, may change at any time\r\n\t *\r\n\t * @type {any}\r\n\t */\r\n\t$$ = undefined;\r\n\t/**\r\n\t * ### PRIVATE API\r\n\t *\r\n\t * Do not use, may change at any time\r\n\t *\r\n\t * @type {any}\r\n\t */\r\n\t$$set = undefined;\r\n\r\n\t/** @returns {void} */\r\n\t$destroy() {\r\n\t\tdestroy_component(this, 1);\r\n\t\tthis.$destroy = noop;\r\n\t}\r\n\r\n\t/**\r\n\t * @template {Extract<keyof Events, string>} K\r\n\t * @param {K} type\r\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\r\n\t * @returns {() => void}\r\n\t */\r\n\t$on(type, callback) {\r\n\t\tif (!is_function(callback)) {\r\n\t\t\treturn noop;\r\n\t\t}\r\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\r\n\t\tcallbacks.push(callback);\r\n\t\treturn () => {\r\n\t\t\tconst index = callbacks.indexOf(callback);\r\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Partial<Props>} props\r\n\t * @returns {void}\r\n\t */\r\n\t$set(props) {\r\n\t\tif (this.$$set && !is_empty(props)) {\r\n\t\t\tthis.$$.skip_bound = true;\r\n\t\t\tthis.$$set(props);\r\n\t\t\tthis.$$.skip_bound = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @typedef {Object} CustomElementPropDefinition\r\n * @property {string} [attribute]\r\n * @property {boolean} [reflect]\r\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\r\n */\r\n", "import {\r\n\tcustom_event,\r\n\tappend,\r\n\tappend_hydration,\r\n\tinsert,\r\n\tinsert_hydration,\r\n\tdetach,\r\n\tlisten,\r\n\tattr\r\n} from './dom.js';\r\nimport { SvelteComponent } from './Component.js';\r\nimport { is_void } from '../../shared/utils/names.js';\r\nimport { VERSION } from '../../shared/version.js';\r\nimport { contenteditable_truthy_values } from './utils.js';\r\nimport { ensure_array_like } from './each.js';\r\n\r\n/**\r\n * @template T\r\n * @param {string} type\r\n * @param {T} [detail]\r\n * @returns {void}\r\n */\r\nexport function dispatch_dev(type, detail) {\r\n\tdocument.dispatchEvent(custom_event(type, { version: VERSION, ...detail }, { bubbles: true }));\r\n}\r\n\r\n/**\r\n * @param {Node} target\r\n * @param {Node} node\r\n * @returns {void}\r\n */\r\nexport function append_dev(target, node) {\r\n\tdispatch_dev('SvelteDOMInsert', { target, node });\r\n\tappend(target, node);\r\n}\r\n\r\n/**\r\n * @param {Node} target\r\n * @param {Node} node\r\n * @returns {void}\r\n */\r\nexport function append_hydration_dev(target, node) {\r\n\tdispatch_dev('SvelteDOMInsert', { target, node });\r\n\tappend_hydration(target, node);\r\n}\r\n\r\n/**\r\n * @param {Node} target\r\n * @param {Node} node\r\n * @param {Node} [anchor]\r\n * @returns {void}\r\n */\r\nexport function insert_dev(target, node, anchor) {\r\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\r\n\tinsert(target, node, anchor);\r\n}\r\n\r\n/** @param {Node} target\r\n * @param {Node} node\r\n * @param {Node} [anchor]\r\n * @returns {void}\r\n */\r\nexport function insert_hydration_dev(target, node, anchor) {\r\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\r\n\tinsert_hydration(target, node, anchor);\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {void}\r\n */\r\nexport function detach_dev(node) {\r\n\tdispatch_dev('SvelteDOMRemove', { node });\r\n\tdetach(node);\r\n}\r\n\r\n/**\r\n * @param {Node} before\r\n * @param {Node} after\r\n * @returns {void}\r\n */\r\nexport function detach_between_dev(before, after) {\r\n\twhile (before.nextSibling && before.nextSibling !== after) {\r\n\t\tdetach_dev(before.nextSibling);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} after\r\n * @returns {void}\r\n */\r\nexport function detach_before_dev(after) {\r\n\twhile (after.previousSibling) {\r\n\t\tdetach_dev(after.previousSibling);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} before\r\n * @returns {void}\r\n */\r\nexport function detach_after_dev(before) {\r\n\twhile (before.nextSibling) {\r\n\t\tdetach_dev(before.nextSibling);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @param {string} event\r\n * @param {EventListenerOrEventListenerObject} handler\r\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\r\n * @param {boolean} [has_prevent_default]\r\n * @param {boolean} [has_stop_propagation]\r\n * @param {boolean} [has_stop_immediate_propagation]\r\n * @returns {() => void}\r\n */\r\nexport function listen_dev(\r\n\tnode,\r\n\tevent,\r\n\thandler,\r\n\toptions,\r\n\thas_prevent_default,\r\n\thas_stop_propagation,\r\n\thas_stop_immediate_propagation\r\n) {\r\n\tconst modifiers =\r\n\t\toptions === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\r\n\tif (has_prevent_default) modifiers.push('preventDefault');\r\n\tif (has_stop_propagation) modifiers.push('stopPropagation');\r\n\tif (has_stop_immediate_propagation) modifiers.push('stopImmediatePropagation');\r\n\tdispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\r\n\tconst dispose = listen(node, event, handler, options);\r\n\treturn () => {\r\n\t\tdispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\r\n\t\tdispose();\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @param {string} attribute\r\n * @param {string} [value]\r\n * @returns {void}\r\n */\r\nexport function attr_dev(node, attribute, value) {\r\n\tattr(node, attribute, value);\r\n\tif (value == null) dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\r\n\telse dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @param {string} property\r\n * @param {any} [value]\r\n * @returns {void}\r\n */\r\nexport function prop_dev(node, property, value) {\r\n\tnode[property] = value;\r\n\tdispatch_dev('SvelteDOMSetProperty', { node, property, value });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} node\r\n * @param {string} property\r\n * @param {any} [value]\r\n * @returns {void}\r\n */\r\nexport function dataset_dev(node, property, value) {\r\n\tnode.dataset[property] = value;\r\n\tdispatch_dev('SvelteDOMSetDataset', { node, property, value });\r\n}\r\n\r\n/**\r\n * @param {Text} text\r\n * @param {unknown} data\r\n * @returns {void}\r\n */\r\nexport function set_data_dev(text, data) {\r\n\tdata = '' + data;\r\n\tif (text.data === data) return;\r\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\r\n\ttext.data = /** @type {string} */ (data);\r\n}\r\n\r\n/**\r\n * @param {Text} text\r\n * @param {unknown} data\r\n * @returns {void}\r\n */\r\nexport function set_data_contenteditable_dev(text, data) {\r\n\tdata = '' + data;\r\n\tif (text.wholeText === data) return;\r\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\r\n\ttext.data = /** @type {string} */ (data);\r\n}\r\n\r\n/**\r\n * @param {Text} text\r\n * @param {unknown} data\r\n * @param {string} attr_value\r\n * @returns {void}\r\n */\r\nexport function set_data_maybe_contenteditable_dev(text, data, attr_value) {\r\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\r\n\t\tset_data_contenteditable_dev(text, data);\r\n\t} else {\r\n\t\tset_data_dev(text, data);\r\n\t}\r\n}\r\n\r\nexport function ensure_array_like_dev(arg) {\r\n\tif (\r\n\t\ttypeof arg !== 'string' &&\r\n\t\t!(arg && typeof arg === 'object' && 'length' in arg) &&\r\n\t\t!(typeof Symbol === 'function' && arg && Symbol.iterator in arg)\r\n\t) {\r\n\t\tthrow new Error('{#each} only works with iterable values.');\r\n\t}\r\n\treturn ensure_array_like(arg);\r\n}\r\n\r\n/**\r\n * @returns {void} */\r\nexport function validate_slots(name, slot, keys) {\r\n\tfor (const slot_key of Object.keys(slot)) {\r\n\t\tif (!~keys.indexOf(slot_key)) {\r\n\t\t\tconsole.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {unknown} tag\r\n * @returns {void}\r\n */\r\nexport function validate_dynamic_element(tag) {\r\n\tconst is_string = typeof tag === 'string';\r\n\tif (tag && !is_string) {\r\n\t\tthrow new Error('<svelte:element> expects \"this\" attribute to be a string.');\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {undefined | string} tag\r\n * @returns {void}\r\n */\r\nexport function validate_void_dynamic_element(tag) {\r\n\tif (tag && is_void(tag)) {\r\n\t\tconsole.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\r\n\t}\r\n}\r\n\r\nexport function construct_svelte_component_dev(component, props) {\r\n\tconst error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\r\n\ttry {\r\n\t\tconst instance = new component(props);\r\n\t\tif (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\r\n\t\t\tthrow new Error(error_message);\r\n\t\t}\r\n\t\treturn instance;\r\n\t} catch (err) {\r\n\t\tconst { message } = err;\r\n\t\tif (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\r\n\t\t\tthrow new Error(error_message);\r\n\t\t} else {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\r\n *\r\n * Can be used to create strongly typed Svelte components.\r\n *\r\n * #### Example:\r\n *\r\n * You have component library on npm called `component-library`, from which\r\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\r\n * you want to provide typings. Therefore you create a `index.d.ts`:\r\n * ```ts\r\n * import { SvelteComponent } from \"svelte\";\r\n * export class MyComponent extends SvelteComponent<{foo: string}> {}\r\n * ```\r\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\r\n * to provide intellisense and to use the component like this in a Svelte file\r\n * with TypeScript:\r\n * ```svelte\r\n * <script lang=\"ts\">\r\n * \timport { MyComponent } from \"component-library\";\r\n * </script>\r\n * <MyComponent foo={'bar'} />\r\n * ```\r\n * @template {Record<string, any>} [Props=any]\r\n * @template {Record<string, any>} [Events=any]\r\n * @template {Record<string, any>} [Slots=any]\r\n * @extends {SvelteComponent<Props, Events>}\r\n */\r\nexport class SvelteComponentDev extends SvelteComponent {\r\n\t/**\r\n\t * For type checking capabilities only.\r\n\t * Does not exist at runtime.\r\n\t * ### DO NOT USE!\r\n\t *\r\n\t * @type {Props}\r\n\t */\r\n\t$$prop_def;\r\n\t/**\r\n\t * For type checking capabilities only.\r\n\t * Does not exist at runtime.\r\n\t * ### DO NOT USE!\r\n\t *\r\n\t * @type {Events}\r\n\t */\r\n\t$$events_def;\r\n\t/**\r\n\t * For type checking capabilities only.\r\n\t * Does not exist at runtime.\r\n\t * ### DO NOT USE!\r\n\t *\r\n\t * @type {Slots}\r\n\t */\r\n\t$$slot_def;\r\n\r\n\t/** @param {import('./public.js').ComponentConstructorOptions<Props>} options */\r\n\tconstructor(options) {\r\n\t\tif (!options || (!options.target && !options.$$inline)) {\r\n\t\t\tthrow new Error(\"'target' is a required option\");\r\n\t\t}\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/** @returns {void} */\r\n\t$destroy() {\r\n\t\tsuper.$destroy();\r\n\t\tthis.$destroy = () => {\r\n\t\t\tconsole.warn('Component was already destroyed'); // eslint-disable-line no-console\r\n\t\t};\r\n\t}\r\n\r\n\t/** @returns {void} */\r\n\t$capture_state() {}\r\n\r\n\t/** @returns {void} */\r\n\t$inject_state() {}\r\n}\r\n/**\r\n * @template {Record<string, any>} [Props=any]\r\n * @template {Record<string, any>} [Events=any]\r\n * @template {Record<string, any>} [Slots=any]\r\n * @deprecated Use `SvelteComponent` instead. See PR for more information: https://github.com/sveltejs/svelte/pull/8512\r\n * @extends {SvelteComponentDev<Props, Events, Slots>}\r\n */\r\nexport class SvelteComponentTyped extends SvelteComponentDev {}\r\n\r\n/** @returns {() => void} */\r\nexport function loop_guard(timeout) {\r\n\tconst start = Date.now();\r\n\treturn () => {\r\n\t\tif (Date.now() - start > timeout) {\r\n\t\t\tthrow new Error('Infinite loop detected');\r\n\t\t}\r\n\t};\r\n}\r\n"],
  "mappings": "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",
  "names": ["element", "now", "element", "children", "group", "element", "text", "crossorigin", "element", "comment", "hash", "tick", "now", "detach", "tick", "now", "init", "promise", "update", "block", "current_component", "insert", "update", "escaped", "not_equal", "append_styles", "create_slot", "attr", "text"]
}
